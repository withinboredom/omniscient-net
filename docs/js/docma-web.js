/*! dustjs-linkedin - v2.7.2
* http://dustjs.com/
* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define("dust.core",[],b):"object"==typeof exports?module.exports=b():a.dust=b()}(this,function(){function getTemplate(a,b){return a?"function"==typeof a&&a.template?a.template:dust.isTemplateFn(a)?a:b!==!1?dust.cache[a]:void 0:void 0}function load(a,b,c){if(!a)return b.setError(new Error("No template or template name provided to render"));var d=getTemplate(a,dust.config.cache);return d?d(b,Context.wrap(c,d.templateName)):dust.onLoad?b.map(function(b){function d(a,d){var f;if(a)return b.setError(a);if(f=getTemplate(d,!1)||getTemplate(e,dust.config.cache),!f){if(!dust.compile)return b.setError(new Error("Dust compiler not available"));f=dust.loadSource(dust.compile(d,e))}f(b,Context.wrap(c,f.templateName)).end()}var e=a;3===dust.onLoad.length?dust.onLoad(e,c.options,d):dust.onLoad(e,d)}):b.setError(new Error("Template Not Found: "+a))}function Context(a,b,c,d,e){void 0===a||a instanceof Stack||(a=new Stack(a)),this.stack=a,this.global=b,this.options=c,this.blocks=d,this.templateName=e}function getWithResolvedData(a,b,c){return function(d){return a.push(d)._get(b,c)}}function Stack(a,b,c,d){this.tail=b,this.isObject=a&&"object"==typeof a,this.head=a,this.index=c,this.of=d}function Stub(a){this.head=new Chunk(this),this.callback=a,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(a,b,c){this.root=a,this.next=b,this.data=[],this.flushable=!1,this.taps=c}function Tap(a,b){this.head=a,this.tail=b}var dust={version:"2.7.2"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var a,b,c={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(a=console.log,b="function"==typeof a?function(){a.apply(console,arguments)}:function(){a(Array.prototype.slice.apply(arguments).join(" "))}):b=EMPTY_FUNC,dust.log=function(a,d){d=d||INFO,c[d]>=c[dust.debugLevel]&&b("[DUST:"+d+"]",a)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(a,b){a&&(b.templateName=a,dust.config.cache!==!1&&(dust.cache[a]=b))},dust.render=function(a,b,c){var d=new Stub(c).head;try{load(a,d,b).end()}catch(e){d.setError(e)}},dust.stream=function(a,b){var c=new Stream,d=c.head;return dust.nextTick(function(){try{load(a,d,b).end()}catch(c){d.setError(c)}}),c},dust.loadSource=function(source){return eval(source)},dust.isArray=Array.isArray?Array.isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},dust.nextTick=function(){return function(a){setTimeout(a,0)}}(),dust.isEmpty=function(a){return 0===a?!1:dust.isArray(a)&&!a.length?!0:!a},dust.isEmptyObject=function(a){var b;if(null===a)return!1;if(void 0===a)return!1;if(a.length>0)return!1;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0},dust.isTemplateFn=function(a){return"function"==typeof a&&a.__dustBody},dust.isThenable=function(a){return a&&"object"==typeof a&&"function"==typeof a.then},dust.isStreamable=function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pipe},dust.filter=function(a,b,c,d){var e,f,g,h;if(c)for(e=0,f=c.length;f>e;e++)g=c[e],g.length&&(h=dust.filters[g],"s"===g?b=null:"function"==typeof h?a=h(a,d):dust.log("Invalid filter `"+g+"`",WARN));return b&&(a=dust.filters[b](a,d)),a},dust.filters={h:function(a){return dust.escapeHtml(a)},j:function(a){return dust.escapeJs(a)},u:encodeURI,uc:encodeURIComponent,js:function(a){return dust.escapeJSON(a)},jp:function(a){return JSON?JSON.parse(a):(dust.log("JSON is undefined; could not parse `"+a+"`",WARN),a)}},dust.makeBase=dust.context=function(a,b){return new Context(void 0,a,b)},Context.wrap=function(a,b){return a instanceof Context?a:new Context(a,{},{},null,b)},Context.prototype.get=function(a,b){return"string"==typeof a&&("."===a[0]&&(b=!0,a=a.substr(1)),a=a.split(".")),this._get(b,a)},Context.prototype._get=function(a,b){var c,d,e,f,g,h=this.stack||{},i=1;if(d=b[0],e=b.length,a&&0===e)f=h,h=h.head;else{if(a)h&&(h=h.head?h.head[d]:void 0);else{for(;h&&(!h.isObject||(f=h.head,c=h.head[d],void 0===c));)h=h.tail;h=void 0!==c?c:this.global&&this.global[d]}for(;h&&e>i;){if(dust.isThenable(h))return h.then(getWithResolvedData(this,a,b.slice(i)));f=h,h=h[b[i]],i++}}return"function"==typeof h?(g=function(){try{return h.apply(f,arguments)}catch(a){throw dust.log(a,ERROR),a}},g.__dustBody=!!h.__dustBody,g):(void 0===h&&dust.log("Cannot find reference `{"+b.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),h)},Context.prototype.getPath=function(a,b){return this._get(a,b)},Context.prototype.push=function(a,b,c){return void 0===a?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(a,this.stack,b,c))},Context.prototype.pop=function(){var a=this.current();return this.stack=this.stack&&this.stack.tail,a},Context.prototype.rebase=function(a){return new Context(a,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var a=this.rebase();return a.stack=this.stack,a},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(a){var b,c,d;if("function"==typeof a&&(a=a(new Chunk,this).data.join("")),b=this.blocks,!b)return dust.log("No blocks for context `"+a+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(c=b.length;c--;)if(d=b[c][a])return d;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(a){var b,c=this.blocks;return a?(b=c?c.concat([a]):[a],new Context(this.stack,this.global,this.options,b,this.getTemplateName())):this},Context.prototype.resolve=function(a){var b;return"function"!=typeof a?a:(b=(new Chunk).render(a,this),b instanceof Chunk?b.data.join(""):b)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.callback(a.error),dust.log("Rendering failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=a.data.join(""),a=a.next,this.head=a}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.emit("error",a.error),this.emit("end"),dust.log("Streaming failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",a.data.join("")),a=a.next,this.head=a}this.emit("end")},Stream.prototype.emit=function(a,b){var c,d,e=this.events||{},f=e[a]||[];if(!f.length)return dust.log("Stream broadcasting, but no listeners for `"+a+"`",DEBUG),!1;for(f=f.slice(0),c=0,d=f.length;d>c;c++)f[c](b);return!0},Stream.prototype.on=function(a,b){var c=this.events=this.events||{},d=c[a]=c[a]||[];return"function"!=typeof b?dust.log("No callback function provided for `"+a+"` event listener",WARN):d.push(b),this},Stream.prototype.pipe=function(a){if("function"!=typeof a.write||"function"!=typeof a.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var b=!1;return"function"==typeof a.emit&&a.emit("pipe",this),"function"==typeof a.on&&a.on("error",function(){b=!0}),this.on("data",function(c){if(!b)try{a.write(c,"utf8")}catch(d){dust.log(d,ERROR)}}).on("end",function(){if(!b)try{a.end(),b=!0}catch(c){dust.log(c,ERROR)}})},Chunk.prototype.write=function(a){var b=this.taps;return b&&(a=b.go(a)),this.data.push(a),this},Chunk.prototype.end=function(a){return a&&this.write(a),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(a){var b=new Chunk(this.root,this.next,this.taps),c=new Chunk(this.root,b,this.taps);this.next=c,this.flushable=!0;try{a(c)}catch(d){dust.log(d,ERROR),c.setError(d)}return b},Chunk.prototype.tap=function(a){var b=this.taps;return this.taps=b?b.push(a):new Tap(a),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(a,b){return a(this,b)},Chunk.prototype.reference=function(a,b,c,d){return"function"==typeof a?(a=a.apply(b.current(),[this,b,null,{auto:c,filters:d}]),a instanceof Chunk?a:this.reference(a,b,c,d)):dust.isThenable(a)?this.await(a,b,null,c,d):dust.isStreamable(a)?this.stream(a,b,null,c,d):dust.isEmpty(a)?this:this.write(dust.filter(a,c,d,b))},Chunk.prototype.section=function(a,b,c,d){var e,f,g,h=c.block,i=c["else"],j=this;if("function"==typeof a&&!dust.isTemplateFn(a)){try{a=a.apply(b.current(),[this,b,c,d])}catch(k){return dust.log(k,ERROR),this.setError(k)}if(a instanceof Chunk)return a}if(dust.isEmptyObject(c))return j;if(dust.isEmptyObject(d)||(b=b.push(d)),dust.isArray(a)){if(h){if(f=a.length,f>0){for(g=b.stack&&b.stack.head||{},g.$len=f,e=0;f>e;e++)g.$idx=e,j=h(j,b.push(a[e],e,f));return g.$idx=void 0,g.$len=void 0,j}if(i)return i(this,b)}}else{if(dust.isThenable(a))return this.await(a,b,c);if(dust.isStreamable(a))return this.stream(a,b,c);if(a===!0){if(h)return h(this,b)}else if(a||0===a){if(h)return h(this,b.push(a))}else if(i)return i(this,b)}return dust.log("Section without corresponding key in template `"+b.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(e)return e(this,b)}else{if(d)return d(this,b);dust.log("No block for exists check in template `"+b.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(d)return d(this,b);dust.log("No block for not-exists check in template `"+b.getTemplateName()+"`",DEBUG)}else if(e)return e(this,b);return this},Chunk.prototype.block=function(a,b,c){var d=a||c.block;return d?d(this,b):this},Chunk.prototype.partial=function(a,b,c,d){var e;return void 0===d&&(d=c,c=b),dust.isEmptyObject(d)||(c=c.clone(),e=c.pop(),c=c.push(d).push(e)),dust.isTemplateFn(a)?this.capture(a,b,function(a,b){c.templateName=a,load(a,b,c).end()}):(c.templateName=a,load(a,this,c))},Chunk.prototype.helper=function(a,b,c,d,e){var f,g=this,h=d.filters;if(void 0===e&&(e="h"),!dust.helpers[a])return dust.log("Helper `"+a+"` does not exist",WARN),g;try{return f=dust.helpers[a](g,b,c,d),f instanceof Chunk?f:("string"==typeof h&&(h=h.split("|")),dust.isEmptyObject(c)?g.reference(f,b,e,h):g.section(f,b,c,d))}catch(i){return dust.log("Error in helper `"+a+"`: "+i.message,ERROR),g.setError(i)}},Chunk.prototype.await=function(a,b,c,d,e){return this.map(function(f){a.then(function(a){f=c?f.section(a,b,c):f.reference(a,b,d,e),f.end()},function(a){var d=c&&c.error;d?f.render(d,b.push(a)).end():(dust.log("Unhandled promise rejection in `"+b.getTemplateName()+"`",INFO),f.end())})})},Chunk.prototype.stream=function(a,b,c,d,e){var f=c&&c.block,g=c&&c.error;return this.map(function(h){var i=!1;a.on("data",function(a){i||(f?h=h.map(function(c){c.render(f,b.push(a)).end()}):c||(h=h.reference(a,b,d,e)))}).on("error",function(a){i||(g?h.render(g,b.push(a)):dust.log("Unhandled stream error in `"+b.getTemplateName()+"`",INFO),i||(i=!0,h.end()))}).on("end",function(){i||(i=!0,h.end())})})},Chunk.prototype.capture=function(a,b,c){return this.map(function(d){var e=new Stub(function(a,b){a?d.setError(a):c(b,d)});a(e.head,b).end()})},Chunk.prototype.setError=function(a){return this.error=a,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(a){return new Tap(a,this)},Tap.prototype.go=function(a){for(var b=this;b;)a=b.head(a),b=b.tail;return a};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(a){return"string"==typeof a||a&&"function"==typeof a.toString?("string"!=typeof a&&(a=a.toString()),HCHARS.test(a)?a.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):a):a};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(a){return"string"==typeof a?a.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):a},dust.escapeJSON=function(a){return JSON?JSON.stringify(a).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+a+"`",WARN),a)},dust}),"function"==typeof define&&define.amd&&define.amd.dust===!0&&define(["require","dust.core"],function(require,dust){return dust.onLoad=function(a,b){require([a],function(){b()})},dust});
/*! dustjs-helpers - v1.7.3
* http://dustjs.com/
* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define(["dust.core"],b):"object"==typeof exports?module.exports=b(require("dustjs-linkedin")):b(a.dust)}(this,function(dust){function a(a,b,c){c=c||"INFO",a=a?"{@"+a+"}: ":"",dust.log(a+b,c)}function b(b){k[b]||(a(b,"Deprecation warning: "+b+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),a(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+b.replace(/\W+/g,""),"WARN"),k[b]=!0)}function c(a){return a.stack.tail&&a.stack.tail.head&&"undefined"!=typeof a.stack.tail.head.__select__}function d(a){return c(a)&&a.get("__select__")}function e(a,b){var c,d=a.stack.head,e=a.rebase();a.stack&&a.stack.tail&&(e.stack=a.stack.tail);var f={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(c in b)f[c]=b[c];return e.push({__select__:f}).push(d,a.stack.index,a.stack.of)}function f(a){var b,c;if(a.isDeferredPending=!0,a.deferreds.length)for(a.isDeferredComplete=!0,b=0,c=a.deferreds.length;c>b;b++)a.deferreds[b]();a.isDeferredPending=!1}function g(a,b){return"function"==typeof b?b.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):b}function h(a,b){return function(c,d,e,f){return i(c,d,e,f,a,b)}}function i(b,c,e,f,g,h){var i,k,l,m,n=e.block,o=e["else"],p=d(c)||{};if(p.isResolved&&!p.isDeferredPending)return b;if(f.hasOwnProperty("key"))k=f.key;else{if(!p.hasOwnProperty("key"))return a(g,"No key specified","WARN"),b;k=p.key}return m=f.type||p.type,k=j(c.resolve(k),m),l=j(c.resolve(f.value),m),h(k,l)?(p.isPending||(i=!0,p.isPending=!0),n&&(b=b.render(n,c)),i&&(p.isResolved=!0)):o&&(b=b.render(o,c)),b}function j(a,b){switch(b&&(b=b.toLowerCase()),b){case"number":return+a;case"string":return String(a);case"boolean":return a="false"===a?!1:a,Boolean(a);case"date":return new Date(a)}return a}var k={},l={tap:function(a,c,d){return b("tap"),d.resolve(a)},sep:function(a,b,c){var d=c.block;return b.stack.index===b.stack.of-1?a:d?d(a,b):a},first:function(a,b,c){return 0===b.stack.index?c.block(a,b):a},last:function(a,b,c){return b.stack.index===b.stack.of-1?c.block(a,b):a},contextDump:function(b,c,d,e){var f,h,i=c.resolve(e.to),j=c.resolve(e.key);switch(j){case"full":f=c.stack;break;default:f=c.stack.head}switch(h=JSON.stringify(f,g,2),i){case"console":a("contextDump",h);break;default:h=h.replace(/</g,"\\u003c"),b=b.write(h)}return b},math:function(b,c,g,h){var i,j=h.key,k=h.method,l=h.operand,m=h.round;if(!h.hasOwnProperty("key")||!h.method)return a("math","`key` or `method` was not provided","ERROR"),b;switch(j=parseFloat(c.resolve(j)),l=parseFloat(c.resolve(l)),k){case"mod":0===l&&a("math","Division by 0","ERROR"),i=j%l;break;case"add":i=j+l;break;case"subtract":i=j-l;break;case"multiply":i=j*l;break;case"divide":0===l&&a("math","Division by 0","ERROR"),i=j/l;break;case"ceil":case"floor":case"round":case"abs":i=Math[k](j);break;case"toint":i=parseInt(j,10);break;default:a("math","Method `"+k+"` is not supported","ERROR")}return"undefined"!=typeof i&&(m&&(i=Math.round(i)),g&&g.block?(c=e(c,{key:i}),b=b.render(g.block,c),f(d(c))):b=b.write(i)),b},select:function(b,c,g,h){var i=g.block,j={};return h.hasOwnProperty("key")&&(j.key=c.resolve(h.key)),h.hasOwnProperty("type")&&(j.type=h.type),i?(c=e(c,j),b=b.render(i,c),f(d(c))):a("select","Missing body block","WARN"),b},eq:h("eq",function(a,b){return a===b}),ne:h("ne",function(a,b){return a!==b}),lt:h("lt",function(a,b){return b>a}),lte:h("lte",function(a,b){return b>=a}),gt:h("gt",function(a,b){return a>b}),gte:h("gte",function(a,b){return a>=b}),any:function(b,c,e,f){var g=d(c);return g?g.isDeferredComplete?a("any","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){g.deferreds.push(function(){g.isResolved&&(a=a.render(e.block,c)),a.end()})}):a("any","Must be used inside a {@select} block","ERROR"),b},none:function(b,c,e,f){var g=d(c);return g?g.isDeferredComplete?a("none","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){g.deferreds.push(function(){g.isResolved||(a=a.render(e.block,c)),a.end()})}):a("none","Must be used inside a {@select} block","ERROR"),b},size:function(a,b,c,d){var e,f,g=d.key;if(g=b.resolve(d.key),g&&g!==!0)if(dust.isArray(g))e=g.length;else if(!isNaN(parseFloat(g))&&isFinite(g))e=g;else if("object"==typeof g){e=0;for(f in g)g.hasOwnProperty(f)&&e++}else e=(g+"").length;else e=0;return a.write(e)}};for(var m in l)dust.helpers[m]=l[m];return dust});
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.page=e()}}(function(){return function e(t,n,r){function i(a,s){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var f=n[a]={exports:{}};t[a][0].call(f.exports,function(e){var n=t[a][1][e];return i(n?n:e)},f,f.exports,e,t,n,r)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(e,t,n){(function(n){"use strict";function r(e,t){if("function"==typeof e)return r("*",e);if("function"==typeof t)for(var n=new s(e),i=1;i<arguments.length;++i)r.callbacks.push(n.middleware(arguments[i]));else"string"==typeof e?r["string"==typeof t?"redirect":"show"](e,t):r.start(e)}function i(e){if(!e.handled){var t;t=y?g+v.hash.replace("#!",""):v.pathname+v.search,t!==e.canonicalPath&&(r.stop(),e.handled=!1,v.href=e.canonicalPath)}}function o(e){return"string"!=typeof e?e:m?decodeURIComponent(e.replace(/\+/g," ")):e}function a(e,t){"/"===e[0]&&0!==e.indexOf(g)&&(e=g+(y?"#!":"")+e);var n=e.indexOf("?");if(this.canonicalPath=e,this.path=e.replace(g,"")||"/",y&&(this.path=this.path.replace("#!","")||"/"),this.title=document.title,this.state=t||{},this.state.path=e,this.querystring=~n?o(e.slice(n+1)):"",this.pathname=o(~n?e.slice(0,n):e),this.params={},this.hash="",!y){if(!~this.path.indexOf("#"))return;var r=this.path.split("#");this.path=r[0],this.hash=o(r[1])||"",this.querystring=this.querystring.split("#")[0]}}function s(e,t){t=t||{},this.path="*"===e?"(.*)":e,this.method="GET",this.regexp=p(this.path,this.keys=[],t)}function c(e){if(1===u(e)&&!(e.metaKey||e.ctrlKey||e.shiftKey||e.defaultPrevented)){for(var t=e.path?e.path[0]:e.target;t&&"A"!==t.nodeName;)t=t.parentNode;if(t&&"A"===t.nodeName&&!t.hasAttribute("download")&&"external"!==t.getAttribute("rel")){var i=t.getAttribute("href");if((y||t.pathname!==v.pathname||!t.hash&&"#"!==i)&&!(i&&i.indexOf("mailto:")>-1)&&!t.target&&f(t.href)){var o=t.pathname+t.search+(t.hash||"");void 0!==n&&o.match(/^\/[a-zA-Z]:\//)&&(o=o.replace(/^\/[a-zA-Z]:\//,"/"));var a=o;0===o.indexOf(g)&&(o=o.substr(g.length)),y&&(o=o.replace("#!","")),g&&a===o||(e.preventDefault(),r.show(a))}}}}function u(e){return e=e||window.event,null===e.which?e.button:e.which}function f(e){var t=v.protocol+"//"+v.hostname;return v.port&&(t+=":"+v.port),e&&0===e.indexOf(t)}var p=e("path-to-regexp");t.exports=r;var h,d,l="undefined"!=typeof document&&document.ontouchstart?"touchstart":"click",v="undefined"!=typeof window&&(window.history.location||window.location),w=!0,m=!0,g="",y=!1;r.callbacks=[],r.exits=[],r.current="",r.len=0,r.base=function(e){if(0===arguments.length)return g;g=e},r.start=function(e){if(e=e||{},!h&&(h=!0,!1===e.dispatch&&(w=!1),!1===e.decodeURLComponents&&(m=!1),!1!==e.popstate&&window.addEventListener("popstate",x,!1),!1!==e.click&&document.addEventListener(l,c,!1),!0===e.hashbang&&(y=!0),w)){var t=y&&~v.hash.indexOf("#!")?v.hash.substr(2)+v.search:v.pathname+v.search+v.hash;r.replace(t,null,!0,w)}},r.stop=function(){h&&(r.current="",r.len=0,h=!1,document.removeEventListener(l,c,!1),window.removeEventListener("popstate",x,!1))},r.show=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,!1!==n&&r.dispatch(o),!1!==o.handled&&!1!==i&&o.pushState(),o},r.back=function(e,t){r.len>0?(history.back(),r.len--):e?setTimeout(function(){r.show(e,t)}):setTimeout(function(){r.show(g,t)})},r.redirect=function(e,t){"string"==typeof e&&"string"==typeof t&&r(e,function(e){setTimeout(function(){r.replace(t)},0)}),"string"==typeof e&&void 0===t&&setTimeout(function(){r.replace(e)},0)},r.replace=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,o.init=n,o.save(),!1!==i&&r.dispatch(o),o},r.dispatch=function(e){function t(){var e=r.exits[s++];if(!e)return n();e(o,t)}function n(){var t=r.callbacks[a++];return e.path!==r.current?void(e.handled=!1):t?void t(e,n):i(e)}var o=d,a=0,s=0;d=e,o?t():n()},r.exit=function(e,t){if("function"==typeof e)return r.exit("*",e);for(var n=new s(e),i=1;i<arguments.length;++i)r.exits.push(n.middleware(arguments[i]))},r.Context=a,a.prototype.pushState=function(){r.len++,history.pushState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},a.prototype.save=function(){history.replaceState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},r.Route=s,s.prototype.middleware=function(e){var t=this;return function(n,r){if(t.match(n.path,n.params))return e(n,r);r()}},s.prototype.match=function(e,t){var n=this.keys,r=e.indexOf("?"),i=~r?e.slice(0,r):e,a=this.regexp.exec(decodeURIComponent(i));if(!a)return!1;for(var s=1,c=a.length;s<c;++s){var u=n[s-1],f=o(a[s]);void 0===f&&hasOwnProperty.call(t,u.name)||(t[u.name]=f)}return!0};var x=function(){var e=!1;if("undefined"!=typeof window)return"complete"===document.readyState?e=!0:window.addEventListener("load",function(){setTimeout(function(){e=!0},0)}),function(t){if(e)if(t.state){var n=t.state.path;r.replace(n,t.state)}else r.show(v.pathname+v.hash,void 0,void 0,!1)}}();r.sameOrigin=f}).call(this,e("_process"))},{_process:2,"path-to-regexp":3}],2:[function(e,t,n){function r(){}var i=t.exports={};i.nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,t="undefined"!=typeof window&&window.MutationObserver,n="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};var r=[];if(t){var i=document.createElement("div");return new MutationObserver(function(){var e=r.slice();r.length=0,e.forEach(function(e){e()})}).observe(i,{attributes:!0}),function(e){r.length||i.setAttribute("yes","no"),r.push(e)}}return n?(window.addEventListener("message",function(e){var t=e.source;if((t===window||null===t)&&"process-tick"===e.data&&(e.stopPropagation(),r.length>0)){r.shift()()}},!0),function(e){r.push(e),window.postMessage("process-tick","*")}):function(e){setTimeout(e,0)}}(),i.title="browser",i.browser=!0,i.env={},i.argv=[],i.on=r,i.addListener=r,i.once=r,i.off=r,i.removeListener=r,i.removeAllListeners=r,i.emit=r,i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")}},{}],3:[function(e,t,n){function r(e){for(var t,n=[],r=0,i=0,o="";null!=(t=w.exec(e));){var a=t[0],c=t[1],u=t.index;if(o+=e.slice(i,u),i=u+a.length,c)o+=c[1];else{o&&(n.push(o),o="");var f=t[2],p=t[3],h=t[4],d=t[5],l=t[6],v=t[7],m="+"===l||"*"===l,g="?"===l||"*"===l,y=f||"/",x=h||d||(v?".*":"[^"+y+"]+?");n.push({name:p||r++,prefix:f||"",delimiter:y,optional:g,repeat:m,pattern:s(x)})}}return i<e.length&&(o+=e.substr(i)),o&&n.push(o),n}function i(e){return o(r(e))}function o(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^"+e[n].pattern+"$"));return function(n){for(var r="",i=n||{},o=0;o<e.length;o++){var a=e[o];if("string"!=typeof a){var s,c=i[a.name];if(null==c){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to be defined')}if(v(c)){if(!a.repeat)throw new TypeError('Expected "'+a.name+'" to not repeat, but received "'+c+'"');if(0===c.length){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to not be empty')}for(var u=0;u<c.length;u++){if(s=encodeURIComponent(c[u]),!t[o].test(s))throw new TypeError('Expected all "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=(0===u?a.prefix:a.delimiter)+s}}else{if(s=encodeURIComponent(c),!t[o].test(s))throw new TypeError('Expected "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=a.prefix+s}}else r+=a}return r}}function a(e){return e.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function u(e){return e.sensitive?"":"i"}function f(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return c(e,t)}function p(e,t,n){for(var r=[],i=0;i<e.length;i++)r.push(l(e[i],t,n).source);return c(new RegExp("(?:"+r.join("|")+")",u(n)),t)}function h(e,t,n){for(var i=r(e),o=d(i,n),a=0;a<i.length;a++)"string"!=typeof i[a]&&t.push(i[a]);return c(o,t)}function d(e,t){t=t||{};for(var n=t.strict,r=t.end!==!1,i="",o=e[e.length-1],s="string"==typeof o&&/\/$/.test(o),c=0;c<e.length;c++){var f=e[c];if("string"==typeof f)i+=a(f);else{var p=a(f.prefix),h=f.pattern;f.repeat&&(h+="(?:"+p+h+")*"),h=f.optional?p?"(?:"+p+"("+h+"))?":"("+h+")?":p+"("+h+")",i+=h}}return n||(i=(s?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&s?"":"(?=\\/|$)",new RegExp("^"+i,u(t))}function l(e,t,n){return t=t||[],v(t)?n||(n={}):(n=t,t=[]),e instanceof RegExp?f(e,t,n):v(e)?p(e,t,n):h(e,t,n)}var v=e("isarray");t.exports=l,t.exports.parse=r,t.exports.compile=i,t.exports.tokensToFunction=o,t.exports.tokensToRegExp=d;var w=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g")},{isarray:4}],4:[function(e,t,n){t.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},{}]},{},[1])(1)});
(function(){"use strict";function e(){}function t(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function n(e){return function(){return this[e].apply(this,arguments)}}var r=e.prototype,i=this,s=i.EventEmitter;r.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},r.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},r.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},r.addListener=function(e,n){var r,i=this.getListenersAsObject(e),s="object"==typeof n;for(r in i)i.hasOwnProperty(r)&&t(i[r],n)===-1&&i[r].push(s?n:{listener:n,once:!1});return this},r.on=n("addListener"),r.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},r.once=n("addOnceListener"),r.defineEvent=function(e){return this.getListeners(e),this},r.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},r.removeListener=function(e,n){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&(r=t(s[i],n))!==-1&&s[i].splice(r,1);return this},r.off=n("removeListener"),r.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},r.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},r.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},r.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},r.removeAllListeners=n("removeEvent"),r.emitEvent=function(e,t){var n,r,i,s,o=this.getListenersAsObject(e);for(s in o)if(o.hasOwnProperty(s))for(n=o[s].slice(0),i=0;i<n.length;i++)r=n[i],r.once===!0&&this.removeListener(e,r.listener),r.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},r.trigger=n("emitEvent"),r.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},r.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},r._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},r._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return i.EventEmitter=s,e},"function"==typeof define&&define.amd?define(function(){return e}):"object"==typeof module&&module.exports?module.exports=e:i.EventEmitter=e}).call(this);
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.</div></div><br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_1},{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_2},{}).w("<div id=\"page-content-wrapper\"><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-lg-12\">").s(ctx.get(["documentation"], false),ctx,{"block":body_3},{}).w("</div></div><br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-toggle\"><span class=\"glyphicon glyphicon-menu-hamburger\"></span></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.p("symbol",ctx,ctx,{});}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><div id=\"docma-content\"></div></div></div><br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar navbar-default navbar-fixed-top\"><div class=\"").x(ctx.get(["boxed"], false),ctx,{"else":body_2,"block":body_3},{}).w("\"><div class=\"nav navbar-left nav-left\"><div class=\"navbar-brand\"><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></div></div>").h("gt",ctx,{"block":body_4},{"key":ctx.getPath(false, ["template","options","navItems","length"]),"value":0},"h").w("</div></nav>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("container-fluid");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<ul class=\"nav navbar-nav\">").s(ctx.getPath(false, ["template","options","navItems"]),ctx,{"block":body_5},{}).w("</ul>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_6,"block":body_7},{});}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_8,"block":body_9},{}).w("\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;").f(ctx.get(["label"], false),ctx,"h").w("&nbsp;<span class=\"caret\"></span></a><ul class=\"dropdown-menu\">").s(ctx.get(["items"], false),ctx,{"block":body_10},{}).w("</ul></li>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("#");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_10.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_5},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).f(ctx.get(["label"], false),ctx,"h",["s"]).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"block":body_3},{}).w("</td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div class=\"sidebar-title\"><span><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></span></div>").x(ctx.getPath(false, ["template","options","search"]),ctx,{"block":body_1},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").s(ctx.get(["symbols"], false),ctx,{"block":body_2},{}).w("</ul><div class=\"sidebar-nav-space\"></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-search\"><input id=\"txt-search\" type=\"search\" class=\"form-control\" placeholder=\"Search...\" /><div class=\"sidebar-search-clean\"><span class=\"glyphicon glyphicon-remove-circle\"></span></div></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$menuitem"]).w("</li>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.w("<div id=\"").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\"><span class=\"glyphicon glyphicon-link color-gray-light\" aria-hidden=\"true\"></span><code class=\"symbol-name\">").f(ctx.getPath(true, []),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.getPath(true, []),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></a>").f(ctx.getPath(true, []),ctx,"h",["s","$tags"]).w("</div>").x(ctx.get(["augments"], false),ctx,{"block":body_1},{}).x(ctx.get(["alias"], false),ctx,{"block":body_2},{}).w("</div><div class=\"symbol-definition\">").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).x(ctx.get(["classdesc"], false),ctx,{"block":body_3},{}).x(ctx.get(["see"], false),ctx,{"block":body_8},{}).h("eq",ctx,{"else":body_13,"block":body_16},{"key":ctx.getPath(false, ["meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.get(["returns"], false),ctx,{"block":body_17},{}).x(ctx.get(["exceptions"], false),ctx,{"block":body_20},{}).x(ctx.get(["isEnum"], false),ctx,{"block":body_23},{}).x(ctx.get(["examples"], false),ctx,{"block":body_24},{}).w("</div></div><hr />").h("eq",ctx,{"block":body_26},{"key":ctx.getPath(false, ["meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.get(["isEnum"], false),ctx,{"else":body_28,"block":body_30},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Extends:</b> ").f(ctx.getPath(true, []),ctx,"h",["s","$extends"]).w("</p>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Alias:</b> <code>").f(ctx.get(["alias"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;&nbsp;&nbsp;&nbsp;</p>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<table>").x(ctx.get(["version"], false),ctx,{"block":body_4},{}).x(ctx.get(["copyright"], false),ctx,{"block":body_5},{}).x(ctx.get(["author"], false),ctx,{"block":body_6},{}).x(ctx.get(["license"], false),ctx,{"block":body_7},{}).w("</table>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<tr><td><b>Version:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.get(["version"], false),ctx,"h",["s"]).w("</td></tr>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><b>Copyright:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.get(["copyright"], false),ctx,"h",["s"]).w("</td></tr>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<tr><td><b>Author:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.get(["author"], false),ctx,"h",["s","$author"]).w("</td></tr>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<tr><td><b>License:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.get(["license"], false),ctx,"h",["s"]).w("</td></tr>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b>See</b>").h("gt",ctx,{"else":body_9,"block":body_11},{"key":ctx.getPath(false, ["see","length"]),"value":1},"h").w("</p><br />");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.s(ctx.get(["see"], false),ctx,{"block":body_10},{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<ul>").s(ctx.get(["see"], false),ctx,{"block":body_12},{}).w("</ul>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.getPath(true, [])),{}).x(ctx.get(["isEnum"], false),ctx,{"else":body_14,"block":body_15},{});}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_14.__dustBody=!0;function body_15(chk,ctx){return chk;}body_15.__dustBody=!0;function body_16(chk,ctx){return chk;}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.h("gt",ctx,{"else":body_18,"block":body_19},{"key":ctx.getPath(false, ["returns","length"]),"value":"1","type":"number"},"h");}body_17.__dustBody=!0;function body_18(chk,ctx){return chk.w("<p><b>Returns:</b>&nbsp;&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$returns"]).w("</p>");}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.w("<b>Returns:</b><p class=\"pad-left\">").f(ctx.getPath(true, []),ctx,"h",["s","$returns"]).w("</p>");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.h("gt",ctx,{"else":body_21,"block":body_22},{"key":ctx.getPath(false, ["exceptions","length"]),"value":"1","type":"number"},"h");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.w("<p><b>Throws:</b>&nbsp;&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$exceptions"]).w("</p>");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<b>Throws:</b><p class=\"pad-left\">").f(ctx.getPath(true, []),ctx,"h",["s","$exceptions"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.w("<p><b>Example</b></p>").s(ctx.get(["examples"], false),ctx,{"block":body_25},{});}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.w("<pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt"]).w("</code></pre>");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.x(ctx.get(["$constructor"], false),ctx,{"block":body_27},{});}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.p("symbol",ctx,ctx.rebase(ctx.get(["$constructor"], false)),{});}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.s(ctx.get(["$members"], false),ctx,{"block":body_29},{});}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.p("symbol",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_29.__dustBody=!0;function body_30(chk,ctx){return chk;}body_30.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var docma = {"routes":[{"id":"api:","type":"api","name":"_def_","path":"/api","contentPath":null},{"id":"content:readme","type":"content","name":"readme","path":"/readme","contentPath":"content/readme.html"},{"id":"content:testing","type":"content","name":"testing","path":"/testing","contentPath":"content/testing.html"}],"apis":{"_def_":{"documentation":[{"comment":"/**\n * To use an Actor, simply create a class that extends actor.\n * You may want to override a few things, such as `Project()`\n * which allows you store the state in an easy to query place,\n * such as MySQL, Postgres, Redis, etc.\n *\n * Never forget to call `Destroy()` after you're finished with\n * an Actor's instance, otherwise you'll end up with a memory leak.\n *\n * ```js\n * import { Actor } from 'omniscient-net';\n * class MyActor extends Actor {\n *   Project() {\n *     rdb.replace(this.Id(), this.state);\n *   }\n * }\n * ```\n * Actors are the powerful building blocks of `omniscient-net`,\n * they are kept in synchronization across all instances. This\n * allows you to create long running services without the need\n * to poll or call a RESTful endpoint to manage global state.\n */","meta":{"range":[824,7659],"filename":"Actor.js","lineno":25,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000007","name":"Actor","type":"ClassDeclaration","paramnames":["id","storage"]}},"classdesc":"<p>To use an Actor, simply create a class that extends actor.\nYou may want to override a few things, such as <code>Project()</code>\nwhich allows you store the state in an easy to query place,\nsuch as MySQL, Postgres, Redis, etc.</p>\n<p>Never forget to call <code>Destroy()</code> after you're finished with\nan Actor's instance, otherwise you'll end up with a memory leak.</p>\n<pre class=\"prettyprint source lang-js\"><code>import { Actor } from 'omniscient-net';\nclass MyActor extends Actor {\n  Project() {\n    rdb.replace(this.Id(), this.state);\n  }\n}</code></pre><p>Actors are the powerful building blocks of <code>omniscient-net</code>,\nthey are kept in synchronization across all instances. This\nallows you to create long running services without the need\nto poll or call a RESTful endpoint to manage global state.</p>","name":"Actor","longname":"Actor","kind":"class","scope":"global","description":"<p>Creates a new Actor</p>","params":[{"type":{"names":["string"]},"description":"<p>The id of the actor</p>","name":"id"},{"type":{"names":["Storage"]},"description":"<p>The storage device</p>","name":"storage"}],"$longname":"Actor","$members":[{"comment":"/**\n\t * Once an instance has `.Load()` called on it, it must have\n\t * `.Destroy()` called so that it may be GC'd in the future.\n\t * Forgetting to do this will result in a memory leak.\n\t * @access public\n\t */","meta":{"range":[2020,2126],"filename":"Actor.js","lineno":92,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000059","name":"Actor#Destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Once an instance has <code>.Load()</code> called on it, it must have\n<code>.Destroy()</code> called so that it may be GC'd in the future.\nForgetting to do this will result in a memory leak.</p>","access":"public","name":"Destroy","longname":"Actor#Destroy","kind":"function","memberof":"Actor","scope":"instance","params":[],"$longname":"Actor#Destroy"},{"comment":"/**\n\t * Firing an event will immediately apply the event and persist it to storage.\n\t *\n\t * Returns a promise that resolves once the event has been applied and broadcast\n\t * @access protected\n\t * @param {string} name The name of the event\n\t * @param {Object} data The data payload of the event\n\t * @param {FireSuccessCallback|null} successCallback A callback to call if the fire was a success\n\t * @returns {Promise.<void>} A promise that resolves once the event has been applied and broadcast\n\t */","meta":{"range":[6636,7095],"filename":"Actor.js","lineno":255,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000442","name":"Actor#Fire","type":"MethodDefinition","paramnames":["name","data","successCallback"]},"vars":{"":null}},"description":"<p>Firing an event will immediately apply the event and persist it to storage.</p>\n<p>Returns a promise that resolves once the event has been applied and broadcast</p>","access":"protected","params":[{"type":{"names":["string"]},"description":"<p>The name of the event</p>","name":"name"},{"type":{"names":["Object"]},"description":"<p>The data payload of the event</p>","name":"data"},{"type":{"names":["FireSuccessCallback","null"]},"description":"<p>A callback to call if the fire was a success</p>","name":"successCallback","defaultvalue":null}],"returns":[{"type":{"names":["Promise.<void>"]},"description":"<p>A promise that resolves once the event has been applied and broadcast</p>"}],"name":"Fire","longname":"Actor#Fire","kind":"function","memberof":"Actor","scope":"instance","$longname":"Actor#Fire"},{"comment":"/**\n\t * Simply returns `this.id`\n\t * @access public\n\t * @returns {string} A string of this instance's stream id\n\t */","meta":{"range":[6107,6134],"filename":"Actor.js","lineno":241,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000434","name":"Actor#Id","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Simply returns <code>this.id</code></p>","access":"public","returns":[{"type":{"names":["string"]},"description":"<p>A string of this instance's stream id</p>"}],"name":"Id","longname":"Actor#Id","kind":"function","memberof":"Actor","scope":"instance","params":[],"$longname":"Actor#Id"},{"comment":"/**\n\t\t * The stream id this actor is associated with\n\t\t * @type {string}\n\t\t * @protected\n\t\t */","meta":{"range":[1109,1121],"filename":"Actor.js","lineno":38,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000017","name":"this.id","type":"Identifier","value":"id","paramnames":[]}},"description":"<p>The stream id this actor is associated with</p>","type":{"names":["string"]},"access":"protected","name":"id","longname":"Actor#id","kind":"member","memberof":"Actor","scope":"instance","$longname":"Actor#id"},{"comment":"/**\n\t\t * The unique instance id\n\t\t * @type {string}\n\t\t * @public\n\t\t * @readonly\n\t\t */","meta":{"range":[1214,1238],"filename":"Actor.js","lineno":46,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000023","name":"this.instanceId","type":"CallExpression","value":"","paramnames":[]}},"description":"<p>The unique instance id</p>","type":{"names":["string"]},"access":"public","readonly":true,"name":"instanceId","longname":"Actor#instanceId","kind":"member","memberof":"Actor","scope":"instance","$longname":"Actor#instanceId"},{"comment":"/**\n\t * Register to listen for another actor's events. Allowing to\n\t * listen for a certain number of times or for a specified\n\t * amount of time. You can listen forever by passing `Infinity`\n\t * as the `number` or `time`.\n\t * @access protected\n\t * @param {string} id The stream id to listen to\n\t * @param {string} eventToHear The event to listen for\n\t * @param {string} eventToFire The event to fire when the event is heard\n\t * @param {int} number The number of times to fire\n\t * @param {int} time The number of milliseconds to listen for\n\t */","meta":{"range":[2675,3471],"filename":"Actor.js","lineno":110,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000086","name":"Actor#ListenFor","type":"MethodDefinition","paramnames":["id","eventToHear","eventToFire","number","time"]},"vars":{"":null}},"description":"<p>Register to listen for another actor's events. Allowing to\nlisten for a certain number of times or for a specified\namount of time. You can listen forever by passing <code>Infinity</code>\nas the <code>number</code> or <code>time</code>.</p>","access":"protected","params":[{"type":{"names":["string"]},"description":"<p>The stream id to listen to</p>","name":"id"},{"type":{"names":["string"]},"description":"<p>The event to listen for</p>","name":"eventToHear"},{"type":{"names":["string"]},"description":"<p>The event to fire when the event is heard</p>","name":"eventToFire"},{"type":{"names":["int"]},"description":"<p>The number of times to fire</p>","name":"number","defaultvalue":1},{"type":{"names":["int"]},"description":"<p>The number of milliseconds to listen for</p>","name":"time","defaultvalue":60000}],"name":"ListenFor","longname":"Actor#ListenFor","kind":"function","memberof":"Actor","scope":"instance","$longname":"Actor#ListenFor"},{"comment":"/**\n\t * Load must be called after creating the instance, for example:\n\t *\n\t * ```js\n\t * const actor = new Actor( id, storage );\n\t * await actor.Load();\n\t * ```\n\t *\n\t * @access public\n\t * @returns {Promise.<void>} A promise that resolves once the state is loaded and new events are subscribed to\n\t */","meta":{"range":[4226,4452],"filename":"Actor.js","lineno":175,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000289","name":"Actor#Load","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Load must be called after creating the instance, for example:</p>\n<pre class=\"prettyprint source lang-js\"><code>const actor = new Actor( id, storage );\nawait actor.Load();</code></pre>","access":"public","returns":[{"type":{"names":["Promise.<void>"]},"description":"<p>A promise that resolves once the state is loaded and new events are subscribed to</p>"}],"name":"Load","longname":"Actor#Load","kind":"function","memberof":"Actor","scope":"instance","params":[],"$longname":"Actor#Load"},{"comment":"/**\n\t\t * The next version number of an event to fire\n\t\t * @type {number}\n\t\t * @protected\n\t\t */","meta":{"range":[1440,1460],"filename":"Actor.js","lineno":60,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000036","name":"this.nextVersion","type":"Literal","value":0,"paramnames":[]}},"description":"<p>The next version number of an event to fire</p>","type":{"names":["number"]},"access":"protected","name":"nextVersion","longname":"Actor#nextVersion","kind":"member","memberof":"Actor","scope":"instance","$longname":"Actor#nextVersion"},{"comment":"/**\n\t * After an event is fired and applied, this method is called. You\n\t * can use it to project your state for easy querying, such as an\n\t * RDB or some other database.\n\t * @access protected\n\t * @returns {Promise.<void>} A promise that resolves once the actor has been projected\n\t */","meta":{"range":[5332,5346],"filename":"Actor.js","lineno":211,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000408","name":"Actor#Project","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>After an event is fired and applied, this method is called. You\ncan use it to project your state for easy querying, such as an\nRDB or some other database.</p>","access":"protected","returns":[{"type":{"names":["Promise.<void>"]},"description":"<p>A promise that resolves once the actor has been projected</p>"}],"name":"Project","longname":"Actor#Project","kind":"function","memberof":"Actor","scope":"instance","params":[],"$longname":"Actor#Project"},{"comment":"/**\n\t\t * Whether or not the actor is currently replaying\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t * @readonly\n\t\t */","meta":{"range":[1670,1692],"filename":"Actor.js","lineno":75,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000048","name":"this.replaying","type":"Literal","value":false,"paramnames":[]}},"description":"<p>Whether or not the actor is currently replaying</p>","type":{"names":["boolean"]},"access":"protected","readonly":true,"name":"replaying","longname":"Actor#replaying","kind":"member","memberof":"Actor","scope":"instance","$longname":"Actor#replaying"},{"comment":"/**\n\t * Simply returns `this.state`, but you can override this to\n\t * persist different objects.\n\t * @access protected\n\t * @returns {Promise.<Object>} A promise that resolves to a snapshot of the current state\n\t */","meta":{"range":[5950,5986],"filename":"Actor.js","lineno":232,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000426","name":"Actor#Snapshot","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Simply returns <code>this.state</code>, but you can override this to\npersist different objects.</p>","access":"protected","returns":[{"type":{"names":["Promise.<Object>"]},"description":"<p>A promise that resolves to a snapshot of the current state</p>"}],"name":"Snapshot","longname":"Actor#Snapshot","kind":"function","memberof":"Actor","scope":"instance","params":[],"$longname":"Actor#Snapshot"},{"comment":"/**\n\t\t * The internal state\n\t\t * @type {{}}\n\t\t * @protected\n\t\t */","meta":{"range":[1533,1548],"filename":"Actor.js","lineno":67,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000042","name":"this.state","type":"ObjectExpression","value":"{}","paramnames":[]}},"description":"<p>The internal state</p>","type":{"names":["Object"]},"access":"protected","name":"state","longname":"Actor#state","kind":"member","memberof":"Actor","scope":"instance","$longname":"Actor#state"},{"comment":"/**\n\t\t * The storage device\n\t\t * @type {Storage}\n\t\t * @protected\n\t\t */","meta":{"range":[1316,1338],"filename":"Actor.js","lineno":53,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000030","name":"this.storage","type":"Identifier","value":"storage","paramnames":[]}},"description":"<p>The storage device</p>","type":{"names":["Storage"]},"access":"protected","name":"storage","longname":"Actor#storage","kind":"member","memberof":"Actor","scope":"instance","$longname":"Actor#storage"},{"comment":"/**\n\t * Resolves when all events have been stored by this instance,\n\t * returns false if it failed, otherwise an array of events\n\t * that were stored successfully.\n\t * @access public\n\t * @see {@link #RqlStorage#Store}\n\t * @returns {Promise.<Array|boolean>} A promise that resolves once all events have been persisted\n\t */","meta":{"range":[5672,5731],"filename":"Actor.js","lineno":222,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000412","name":"Actor#Store","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Resolves when all events have been stored by this instance,\nreturns false if it failed, otherwise an array of events\nthat were stored successfully.</p>","access":"public","see":["{@link #RqlStorage#Store}"],"returns":[{"type":{"names":["Promise.<(Array|boolean)>"]},"description":"<p>A promise that resolves once all events have been persisted</p>"}],"name":"Store","longname":"Actor#Store","kind":"function","memberof":"Actor","scope":"instance","params":[],"$longname":"Actor#Store"},{"comment":"/**\n\t\t * Any current subscriptions\n\t\t * @type {Array}\n\t\t * @protected\n\t\t * @readonly\n\t\t */","meta":{"range":[1790,1804],"filename":"Actor.js","lineno":83,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000054","name":"this.subs","type":"ArrayExpression","value":"[]","paramnames":[]}},"description":"<p>Any current subscriptions</p>","type":{"names":["Array"]},"access":"protected","readonly":true,"name":"subs","longname":"Actor#subs","kind":"member","memberof":"Actor","scope":"instance","$longname":"Actor#subs"},{"comment":"/**\n * Called on events\n * @callback Actor~OnEvent\n * @param {Object} event The raw event object\n */","meta":{"range":[7913,8013],"filename":"Actor.js","lineno":313,"path":"/home/robert/code/soaring-octopus/lib","code":{}},"description":"<p>Called on events</p>","kind":"typedef","name":"OnEvent","type":{"names":["function"]},"params":[{"type":{"names":["Object"]},"description":"<p>The raw event object</p>","name":"event"}],"memberof":"Actor","longname":"Actor~OnEvent","scope":"inner","$longname":"Actor~OnEvent"},{"comment":"/**\n * Projector Callback\n * @callback Actor~ProjectorCallback\n */","meta":{"range":[7845,7911],"filename":"Actor.js","lineno":308,"path":"/home/robert/code/soaring-octopus/lib","code":{}},"description":"<p>Projector Callback</p>","kind":"typedef","name":"ProjectorCallback","type":{"names":["function"]},"memberof":"Actor","longname":"Actor~ProjectorCallback","scope":"inner","$longname":"Actor~ProjectorCallback"}],"$constructor":{"comment":"/**\n\t * Creates a new Actor\n\t * @param {string} id The id of the actor\n\t * @param {Storage} storage The storage device\n\t * @constructor\n\t */","meta":{"range":[981,1808],"filename":"Actor.js","lineno":32,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000010","name":"Actor","type":"MethodDefinition","paramnames":["id","storage"]},"vars":{"":null}},"description":"<p>Creates a new Actor</p>","params":[{"type":{"names":["string"]},"description":"<p>The id of the actor</p>","name":"id"},{"type":{"names":["Storage"]},"description":"<p>The storage device</p>","name":"storage"}],"kind":"class","name":"Actor","longname":"Actor","scope":"global","undocumented":true,"$longname":"Actor"}},{"comment":"/**\n * Verifies State\n * @see {@link #Given}\n */","meta":{"range":[1701,1991],"filename":"Given.js","lineno":86,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000794","name":"And","type":"ClassDeclaration","paramnames":["test"]}},"classdesc":"<p>Verifies State</p>","see":["{@link #Given}"],"name":"And","longname":"And","kind":"class","scope":"global","params":[],"$longname":"And","$members":[{"comment":"/**\n\t * And this state\n\t * @access public\n\t * @param {Object} expected The expected state\n\t * @return {Promise.<void>}\n\t */","meta":{"range":[1886,1989],"filename":"Given.js","lineno":97,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000808","name":"And#And","type":"MethodDefinition","paramnames":["expected"]},"vars":{"":null}},"description":"<p>And this state</p>","access":"public","params":[{"type":{"names":["Object"]},"description":"<p>The expected state</p>","name":"expected"}],"returns":[{"type":{"names":["Promise.<void>"]}}],"name":"And","longname":"And#And","kind":"function","memberof":"And","scope":"instance","$longname":"And#And"}],"$constructor":{"comment":"","meta":{"range":[1714,1758],"filename":"Given.js","lineno":87,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000797","name":"And","type":"MethodDefinition","paramnames":["test"]},"vars":{"":null}},"undocumented":true,"name":"And","longname":"And","kind":"class","scope":"global","params":[],"$longname":"And"}},{"comment":"/**\n * Called when a successful firing occurs\n * @callback FireSuccessCallback\n */","meta":{"range":[7661,7743],"filename":"Actor.js","lineno":298,"path":"/home/robert/code/soaring-octopus/lib","code":{}},"description":"<p>Called when a successful firing occurs</p>","kind":"typedef","name":"FireSuccessCallback","type":{"names":["function"]},"longname":"FireSuccessCallback","scope":"global","$longname":"FireSuccessCallback"},{"comment":"/**\n * Given an object and a set of events\n * @param {Actor.constructor} object The class to give\n * @param {Array} events The events to give\n * @return {When}\n */","meta":{"range":[313,723],"filename":"Given.js","lineno":16,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000600","name":"Given","type":"FunctionDeclaration","paramnames":["object","events"]},"vars":{"version":"Given~version","realEvents":"Given~realEvents","":null}},"description":"<p>Given an object and a set of events</p>","params":[{"type":{"names":["Actor.constructor"]},"description":"<p>The class to give</p>","name":"object"},{"type":{"names":["Array"]},"description":"<p>The events to give</p>","name":"events"}],"returns":[{"type":{"names":["When"]}}],"name":"Given","longname":"Given","kind":"function","scope":"global","$longname":"Given"},{"comment":"/**\n * A solid in-memory storage provider,\n * mostly designed for testing\n * @extends Storage\n */","meta":{"range":[139,3526],"filename":"MemStorage.js","lineno":8,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000843","name":"MemStorage","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>A solid in-memory storage provider,\nmostly designed for testing</p>","augments":["Storage"],"name":"MemStorage","longname":"MemStorage","kind":"class","scope":"global","description":"<p>Creates a basic in-memory storage device</p>","params":[],"$longname":"MemStorage","$members":[{"comment":"/**\n\t * Does nothing\n\t */","meta":{"range":[660,697],"filename":"MemStorage.js","lineno":39,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000897","name":"MemStorage#Close","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Does nothing</p>","name":"Close","longname":"MemStorage#Close","kind":"function","memberof":"MemStorage","scope":"instance","params":[],"$longname":"MemStorage#Close"},{"comment":"/**\n\t * Does nothing\n\t */","meta":{"range":[391,410],"filename":"MemStorage.js","lineno":24,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000879","name":"MemStorage#doMigrations","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Does nothing</p>","name":"doMigrations","longname":"MemStorage#doMigrations","kind":"function","memberof":"MemStorage","scope":"instance","params":[],"$longname":"MemStorage#doMigrations"},{"comment":"/**\n\t * Attempt to hard lock an instance, returns true if successful\n\t * @param {Actor} instance\n\t */","meta":{"range":[3959,4100],"filename":"Storage.js","lineno":168,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003180","name":"Storage#HardLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Attempt to hard lock an instance, returns true if successful</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"HardLock","longname":"MemStorage#HardLock","kind":"function","memberof":"MemStorage","scope":"instance","inherits":"Storage#HardLock","inherited":true,"$longname":"MemStorage#HardLock"},{"comment":"/**\n\t * Injects an event into history -- only use for testing/mocking\n\t * @param {string} id The id of the event\n\t * @param {object} data The data of the event\n\t */","meta":{"range":[579,630],"filename":"MemStorage.js","lineno":32,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000883","name":"MemStorage#Inject","type":"MethodDefinition","paramnames":["id","data"]},"vars":{"":null}},"description":"<p>Injects an event into history -- only use for testing/mocking</p>","params":[{"type":{"names":["string"]},"description":"<p>The id of the event</p>","name":"id"},{"type":{"names":["object"]},"description":"<p>The data of the event</p>","name":"data"}],"name":"Inject","longname":"MemStorage#Inject","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#Inject"},{"comment":"/**\n\t * Returns `true` if an instance is hard locked\n\t * @param {Actor} instance\n\t * @returns {boolean} Whether or not it is hard locked\n\t */","meta":{"range":[2417,2552],"filename":"Storage.js","lineno":92,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002959","name":"Storage#IsHardLocked","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Returns <code>true</code> if an instance is hard locked</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not it is hard locked</p>"}],"name":"IsHardLocked","longname":"MemStorage#IsHardLocked","kind":"function","memberof":"MemStorage","scope":"instance","inherits":"Storage#IsHardLocked","inherited":true,"$longname":"MemStorage#IsHardLocked"},{"comment":"/**\n\t * Will return true whether the lock is a hard lock or a soft lock.\n\t * @param {Actor} instance The instance to check\n\t * @returns {boolean} Whether or not it is locked\n\t */","meta":{"range":[2172,2271],"filename":"Storage.js","lineno":83,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002935","name":"Storage#IsLocked","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Will return true whether the lock is a hard lock or a soft lock.</p>","params":[{"type":{"names":["Actor"]},"description":"<p>The instance to check</p>","name":"instance"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not it is locked</p>"}],"name":"IsLocked","longname":"MemStorage#IsLocked","kind":"function","memberof":"MemStorage","scope":"instance","inherits":"Storage#IsLocked","inherited":true,"$longname":"MemStorage#IsLocked"},{"comment":"/**\n\t * Loads events\n\t * @param {string} id\n\t * @param {int} from default -1\n\t * @return {Array}\n\t */","meta":{"range":[2023,2216],"filename":"MemStorage.js","lineno":106,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001091","name":"MemStorage#LoadEvents","type":"MethodDefinition","paramnames":["id","from"]},"vars":{"":null}},"description":"<p>Loads events</p>","params":[{"type":{"names":["string"]},"name":"id"},{"type":{"names":["int"]},"description":"<p>default -1</p>","name":"from"}],"returns":[{"type":{"names":["Array"]}}],"name":"LoadEvents","longname":"MemStorage#LoadEvents","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#LoadEvents"},{"comment":"/**\n\t * Returns a promise that immediately resolves\n\t * @param {string} id\n\t * @return {Promise.<null>}\n\t */","meta":{"range":[1860,1917],"filename":"MemStorage.js","lineno":96,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001080","name":"MemStorage#LoadSnapshot","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"<p>Returns a promise that immediately resolves</p>","params":[{"type":{"names":["string"]},"name":"id"}],"returns":[{"type":{"names":["Promise.<null>"]}}],"name":"LoadSnapshot","longname":"MemStorage#LoadSnapshot","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#LoadSnapshot"},{"comment":"/**\n\t * Does nothing\n\t * @param {Actor} instance\n\t */","meta":{"range":[3232,3261],"filename":"MemStorage.js","lineno":168,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001297","name":"MemStorage#SetProjector","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Does nothing</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"SetProjector","longname":"MemStorage#SetProjector","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#SetProjector"},{"comment":"/**\n\t * Does nothing\n\t * @param {Actor} instance\n\t */","meta":{"range":[3408,3436],"filename":"MemStorage.js","lineno":182,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001307","name":"MemStorage#SetSnapshot","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Does nothing</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"SetSnapshot","longname":"MemStorage#SetSnapshot","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#SetSnapshot"},{"comment":"/**\n\t * Attempts to soft lock an instance, returns true if it was successful\n\t * @param {Actor} instance\n\t */","meta":{"range":[2920,3853],"filename":"Storage.js","lineno":114,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003008","name":"Storage#SoftLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Attempts to soft lock an instance, returns true if it was successful</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"SoftLock","longname":"MemStorage#SoftLock","kind":"function","memberof":"MemStorage","scope":"instance","inherits":"Storage#SoftLock","inherited":true,"$longname":"MemStorage#SoftLock"},{"comment":"/**\n\t * Stores events for a given actor\n\t * @param {Actor} instance\n\t * @param {Array} events\n\t * @param {boolean} ignoreConcurrencyError\n\t * @returns {Promise.<Array>}\n\t */","meta":{"range":[875,1747],"filename":"MemStorage.js","lineno":50,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000901","name":"MemStorage#Store","type":"MethodDefinition","paramnames":["instance","events","ignoreConcurrencyError"]},"vars":{"":null}},"description":"<p>Stores events for a given actor</p>","params":[{"type":{"names":["Actor"]},"name":"instance"},{"type":{"names":["Array"]},"name":"events"},{"type":{"names":["boolean"]},"name":"ignoreConcurrencyError","defaultvalue":true}],"returns":[{"type":{"names":["Promise.<Array>"]}}],"name":"Store","longname":"MemStorage#Store","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#Store"},{"comment":"/**\n\t * Subscribe\n\t * @param {string} id The id\n\t * @param {Actor~OnEvent} cb Event handler\n\t * @return {Promise.<void>}\n\t */","meta":{"range":[2346,2638],"filename":"MemStorage.js","lineno":120,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001134","name":"MemStorage#SubscribeTo","type":"MethodDefinition","paramnames":["id","cb"]},"vars":{"":null}},"description":"<p>Subscribe</p>","params":[{"type":{"names":["string"]},"description":"<p>The id</p>","name":"id"},{"type":{"names":["Actor~OnEvent"]},"description":"<p>Event handler</p>","name":"cb"}],"returns":[{"type":{"names":["Promise.<void>"]}}],"name":"SubscribeTo","longname":"MemStorage#SubscribeTo","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#SubscribeTo"},{"comment":"/**\n\t * Subscribe to a name\n\t * @param {string} name\n\t * @param {Actor~OnEvent} cb\n\t */","meta":{"range":[2730,2860],"filename":"MemStorage.js","lineno":141,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001205","name":"MemStorage#SubscribeToName","type":"MethodDefinition","paramnames":["name","cb"]},"vars":{"":null}},"description":"<p>Subscribe to a name</p>","params":[{"type":{"names":["string"]},"name":"name"},{"type":{"names":["Actor~OnEvent"]},"name":"cb"}],"name":"SubscribeToName","longname":"MemStorage#SubscribeToName","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#SubscribeToName"},{"comment":"/**\n\t * Completely unlocks an instance. If some other instance\n\t * locked it, you can call `Unlock` to force it.\n\t * @param {Actor} instance\n\t */","meta":{"range":[2702,2806],"filename":"Storage.js","lineno":104,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002984","name":"Storage#Unlock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Completely unlocks an instance. If some other instance\nlocked it, you can call <code>Unlock</code> to force it.</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"Unlock","longname":"MemStorage#Unlock","kind":"function","memberof":"MemStorage","scope":"instance","inherits":"Storage#Unlock","inherited":true,"$longname":"MemStorage#Unlock"},{"comment":"/**\n\t * Does nothing\n\t * @param {Actor} instance\n\t */","meta":{"range":[3319,3350],"filename":"MemStorage.js","lineno":175,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001302","name":"MemStorage#UnsetProjector","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Does nothing</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"UnsetProjector","longname":"MemStorage#UnsetProjector","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#UnsetProjector"},{"comment":"/**\n\t * Does nothing\n\t * @param {Actor} instance\n\t */","meta":{"range":[3494,3524],"filename":"MemStorage.js","lineno":189,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001312","name":"MemStorage#UnsetSnapshot","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Does nothing</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"UnsetSnapshot","longname":"MemStorage#UnsetSnapshot","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#UnsetSnapshot"},{"comment":"/**\n\t * Unsubscribe\n\t * @param {string} id\n\t * @param {Actor~OnEvent} cb\n\t */","meta":{"range":[2942,3174],"filename":"MemStorage.js","lineno":154,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001237","name":"MemStorage#Unsubscribe","type":"MethodDefinition","paramnames":["id","cb"]},"vars":{"":null}},"description":"<p>Unsubscribe</p>","params":[{"type":{"names":["string"]},"name":"id"},{"type":{"names":["Actor~OnEvent"]},"name":"cb"}],"name":"Unsubscribe","longname":"MemStorage#Unsubscribe","kind":"function","memberof":"MemStorage","scope":"instance","$longname":"MemStorage#Unsubscribe"},{"comment":"/**\n\t * Returns a promise that resolves when the lock is released. If there's a hard lock,\n\t * it will be resolved when the instance holding the lock releases the lock.\n\t * @param {Actor} instance The instance to wait on\n\t * @return {Promise.<void>}\n\t */","meta":{"range":[4359,4499],"filename":"Storage.js","lineno":182,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003209","name":"Storage#WaitLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Returns a promise that resolves when the lock is released. If there's a hard lock,\nit will be resolved when the instance holding the lock releases the lock.</p>","params":[{"type":{"names":["Actor"]},"description":"<p>The instance to wait on</p>","name":"instance"}],"returns":[{"type":{"names":["Promise.<void>"]}}],"name":"WaitLock","longname":"MemStorage#WaitLock","kind":"function","memberof":"MemStorage","scope":"instance","inherits":"Storage#WaitLock","inherited":true,"$longname":"MemStorage#WaitLock"}],"$constructor":{"comment":"/**\n\t * Creates a basic in-memory storage device\n\t * @constructor\n\t */","meta":{"range":[247,361],"filename":"MemStorage.js","lineno":13,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000847","name":"MemStorage","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Creates a basic in-memory storage device</p>","kind":"class","name":"MemStorage","longname":"MemStorage","scope":"global","params":[],"undocumented":true,"$longname":"MemStorage"}},{"comment":"/**\n * *Warning* You probably don't need to use this directly\n *\n * This class supplies The RqlStorage with distributed locks.\n *\n * If you know a lot about this sort of thing ... please help out.\n *\n * @see {@link #RqlStorage}\n */","meta":{"range":[311,2810],"filename":"RqlStorage.js","lineno":13,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001336","name":"RqlLockProvider","type":"ClassDeclaration","paramnames":["r"]}},"classdesc":"<p><em>Warning</em> You probably don't need to use this directly</p>\n<p>This class supplies The RqlStorage with distributed locks.</p>\n<p>If you know a lot about this sort of thing ... please help out.</p>","see":["{@link #RqlStorage}"],"name":"RqlLockProvider","longname":"RqlLockProvider","kind":"class","scope":"global","description":"<p>Create a lock provider</p>","params":[{"type":{"names":["r"]},"description":"<p>A rethinkdb instance</p>","name":"r"}],"$longname":"RqlLockProvider","$members":[{"comment":"/**\n\t * Releases a lock\n\t * @access public\n\t * @param {string} id The id of the lock to release\n\t */","meta":{"range":[2660,2808],"filename":"RqlStorage.js","lineno":127,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001607","name":"RqlLockProvider#delete","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"<p>Releases a lock</p>","access":"public","params":[{"type":{"names":["string"]},"description":"<p>The id of the lock to release</p>","name":"id"}],"name":"delete","longname":"RqlLockProvider#delete","kind":"function","memberof":"RqlLockProvider","scope":"instance","$longname":"RqlLockProvider#delete"},{"comment":"/**\n\t * Get's a promise that resolves once the lock is released\n\t * @access public\n\t * @param {string} id The stream id to get the lock from\n\t * @return {Promise.<void>} A promise that resolves once the lock is released\n\t */","meta":{"range":[2502,2555],"filename":"RqlStorage.js","lineno":118,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001592","name":"RqlLockProvider#get","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"<p>Get's a promise that resolves once the lock is released</p>","access":"public","params":[{"type":{"names":["string"]},"description":"<p>The stream id to get the lock from</p>","name":"id"}],"returns":[{"type":{"names":["Promise.<void>"]},"description":"<p>A promise that resolves once the lock is released</p>"}],"name":"get","longname":"RqlLockProvider#get","kind":"function","memberof":"RqlLockProvider","scope":"instance","$longname":"RqlLockProvider#get"},{"comment":"/**\n\t * Checks to see if a lock exists for a given stream id\n\t * @access public\n\t * @param {string} id The id to check for\n\t * @return {boolean} `true` if a lock exists, otherwise `false`\n\t */","meta":{"range":[1749,1794],"filename":"RqlStorage.js","lineno":84,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001517","name":"RqlLockProvider#has","type":"MethodDefinition","paramnames":["id"]},"vars":{"":null}},"description":"<p>Checks to see if a lock exists for a given stream id</p>","access":"public","params":[{"type":{"names":["string"]},"description":"<p>The id to check for</p>","name":"id"}],"returns":[{"type":{"names":["boolean"]},"description":"<p><code>true</code> if a lock exists, otherwise <code>false</code></p>"}],"name":"has","longname":"RqlLockProvider#has","kind":"function","memberof":"RqlLockProvider","scope":"instance","$longname":"RqlLockProvider#has"},{"comment":"/**\n\t * Initialize the lock states, subscribes to updates\n\t * @access public\n\t * @return {Promise.<void>} A promise that resolves once everything is initialized\n\t */","meta":{"range":[748,1552],"filename":"RqlStorage.js","lineno":38,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001357","name":"RqlLockProvider#init","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Initialize the lock states, subscribes to updates</p>","access":"public","returns":[{"type":{"names":["Promise.<void>"]},"description":"<p>A promise that resolves once everything is initialized</p>"}],"name":"init","longname":"RqlLockProvider#init","kind":"function","memberof":"RqlLockProvider","scope":"instance","params":[],"$longname":"RqlLockProvider#init"},{"comment":"/**\n\t\t * A map of locks\n\t\t * @type {Map}\n\t\t */","meta":{"range":[552,574],"filename":"RqlStorage.js","lineno":30,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001351","name":"this.locks","type":"NewExpression","value":"","paramnames":[]}},"description":"<p>A map of locks</p>","type":{"names":["Map"]},"name":"locks","longname":"RqlLockProvider#locks","kind":"member","memberof":"RqlLockProvider","scope":"instance","$longname":"RqlLockProvider#locks"},{"comment":"/**\n\t\t * The rethinkdb instance\n\t\t * @type {r}\n\t\t */","meta":{"range":[488,498],"filename":"RqlStorage.js","lineno":24,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001345","name":"this.r","type":"Identifier","value":"r","paramnames":[]}},"description":"<p>The rethinkdb instance</p>","type":{"names":["r"]},"name":"r","longname":"RqlLockProvider#r","kind":"member","memberof":"RqlLockProvider","scope":"instance","$longname":"RqlLockProvider#r"},{"comment":"/**\n\t * Sets an instance to be the lock holder for an id\n\t * @access public\n\t * @param {string} id The id to lock\n\t * @param {Actor} value The actor holding the lock\n\t */","meta":{"range":[1969,2273],"filename":"RqlStorage.js","lineno":94,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001530","name":"RqlLockProvider#set","type":"MethodDefinition","paramnames":["id","value"]},"vars":{"":null}},"description":"<p>Sets an instance to be the lock holder for an id</p>","access":"public","params":[{"type":{"names":["string"]},"description":"<p>The id to lock</p>","name":"id"},{"type":{"names":["Actor"]},"description":"<p>The actor holding the lock</p>","name":"value"}],"name":"set","longname":"RqlLockProvider#set","kind":"function","memberof":"RqlLockProvider","scope":"instance","$longname":"RqlLockProvider#set"}],"$constructor":{"comment":"/**\n\t * Create a lock provider\n\t * @param {r} r A rethinkdb instance\n\t */","meta":{"range":[412,578],"filename":"RqlStorage.js","lineno":19,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001339","name":"RqlLockProvider","type":"MethodDefinition","paramnames":["r"]},"vars":{"":null}},"description":"<p>Create a lock provider</p>","params":[{"type":{"names":["r"]},"description":"<p>A rethinkdb instance</p>","name":"r"}],"name":"RqlLockProvider","longname":"RqlLockProvider","kind":"class","scope":"global","undocumented":true,"$longname":"RqlLockProvider"}},{"comment":"/**\n * Storage Adapters provide the mechanism for Hard Locks\n * and distributed actors to function. There's two adapters provided,\n * this is for a rethinkdb backed storage adapter.\n *\n * It's recommended to review RethinkDb's clustering and scalability\n * documentation to get the most from it.\n *\n * ```js\n * const {RqlStorage} = require('omniscient-net');\n * const storage = new RqlStorage(host, db, port, options);\n * // must always be called to assert db sanity and wire up locks\n * await storage.doMigrations();\n * ```\n * @extends Storage\n * @see {@link #Storage}\n */","meta":{"range":[3386,13669],"filename":"RqlStorage.js","lineno":152,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001650","name":"RqlStorage","type":"ClassDeclaration","paramnames":["host","db","port","options"]}},"classdesc":"<p>Storage Adapters provide the mechanism for Hard Locks\nand distributed actors to function. There's two adapters provided,\nthis is for a rethinkdb backed storage adapter.</p>\n<p>It's recommended to review RethinkDb's clustering and scalability\ndocumentation to get the most from it.</p>\n<pre class=\"prettyprint source lang-js\"><code>const {RqlStorage} = require('omniscient-net');\nconst storage = new RqlStorage(host, db, port, options);\n// must always be called to assert db sanity and wire up locks\nawait storage.doMigrations();</code></pre>","augments":["Storage"],"see":["{@link #Storage}"],"name":"RqlStorage","longname":"RqlStorage","kind":"class","scope":"global","description":"<p>Creates a storage adapter backed by rethinkdb</p>","params":[{"type":{"names":["string"]},"description":"<p>The host to connect to</p>","name":"host"},{"type":{"names":["string"]},"description":"<p>The database to connect to</p>","name":"db"},{"type":{"names":["int"]},"description":"<p>The port to connect to</p>","name":"port"},{"type":{"names":["Object"]},"description":"<p>Extraneous options</p>","name":"options"},{"type":{"names":["number"]},"description":"<p>When to optimize the event stream through memoization / snapshot {@link #RqlStorage#optimizeAt} default is 10</p>","name":"options.optimizeAt"}],"$longname":"RqlStorage","$members":[{"comment":"/**\n\t * Give the storage adapter a chance to close any open connections\n\t * @access public\n\t */","meta":{"range":[7495,7576],"filename":"RqlStorage.js","lineno":331,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002127","name":"RqlStorage#Close","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Give the storage adapter a chance to close any open connections</p>","access":"public","name":"Close","longname":"RqlStorage#Close","kind":"function","memberof":"RqlStorage","scope":"instance","params":[],"$longname":"RqlStorage#Close"},{"comment":"/**\n\t * Allows a storage adapter to perform any asynchronous setup,\n\t * such as connecting to a database, creating tables, preparing queries, etc.\n\t *\n\t * It usually *must* be called before anything else.\n\t * @access public\n\t * @returns {Promise.<void>}\n\t */","meta":{"range":[5081,6324],"filename":"RqlStorage.js","lineno":235,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001735","name":"RqlStorage#doMigrations","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Allows a storage adapter to perform any asynchronous setup,\nsuch as connecting to a database, creating tables, preparing queries, etc.</p>\n<p>It usually <em>must</em> be called before anything else.</p>","access":"public","returns":[{"type":{"names":["Promise.<void>"]}}],"name":"doMigrations","longname":"RqlStorage#doMigrations","kind":"function","memberof":"RqlStorage","scope":"instance","params":[],"$longname":"RqlStorage#doMigrations"},{"comment":"/**\n\t * Attempt to hard lock an instance, returns true if successful\n\t * @param {Actor} instance\n\t */","meta":{"range":[3959,4100],"filename":"Storage.js","lineno":168,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003180","name":"Storage#HardLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Attempt to hard lock an instance, returns true if successful</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"HardLock","longname":"RqlStorage#HardLock","kind":"function","memberof":"RqlStorage","scope":"instance","inherits":"Storage#HardLock","inherited":true,"$longname":"RqlStorage#HardLock"},{"comment":"/**\n\t * Returns `true` if an instance is hard locked\n\t * @param {Actor} instance\n\t * @returns {boolean} Whether or not it is hard locked\n\t */","meta":{"range":[2417,2552],"filename":"Storage.js","lineno":92,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002959","name":"Storage#IsHardLocked","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Returns <code>true</code> if an instance is hard locked</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not it is hard locked</p>"}],"name":"IsHardLocked","longname":"RqlStorage#IsHardLocked","kind":"function","memberof":"RqlStorage","scope":"instance","inherits":"Storage#IsHardLocked","inherited":true,"$longname":"RqlStorage#IsHardLocked"},{"comment":"/**\n\t * Will return true whether the lock is a hard lock or a soft lock.\n\t * @param {Actor} instance The instance to check\n\t * @returns {boolean} Whether or not it is locked\n\t */","meta":{"range":[2172,2271],"filename":"Storage.js","lineno":83,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002935","name":"Storage#IsLocked","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Will return true whether the lock is a hard lock or a soft lock.</p>","params":[{"type":{"names":["Actor"]},"description":"<p>The instance to check</p>","name":"instance"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not it is locked</p>"}],"name":"IsLocked","longname":"RqlStorage#IsLocked","kind":"function","memberof":"RqlStorage","scope":"instance","inherits":"Storage#IsLocked","inherited":true,"$longname":"RqlStorage#IsLocked"},{"comment":"/**\n\t * Set a callback to be called when it's safe for the instance to project it's state\n\t * @access public\n\t * @param {Actor} instance The instance to set the projector\n\t * @param {Actor~ProjectorCallback} callback The callback\n\t */","meta":{"range":[9681,9765],"filename":"RqlStorage.js","lineno":410,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002406","name":"RqlStorage#SetProjector","type":"MethodDefinition","paramnames":["instance","callback"]},"vars":{"":null}},"description":"<p>Set a callback to be called when it's safe for the instance to project it's state</p>","access":"public","params":[{"type":{"names":["Actor"]},"description":"<p>The instance to set the projector</p>","name":"instance"},{"type":{"names":["Actor~ProjectorCallback"]},"description":"<p>The callback</p>","name":"callback"}],"name":"SetProjector","longname":"RqlStorage#SetProjector","kind":"function","memberof":"RqlStorage","scope":"instance","$longname":"RqlStorage#SetProjector"},{"comment":"/**\n\t * Set a callback that can take a snapshot of an Actor instance\n\t * @access public\n\t * @param {Actor} instance\n\t * @param {Actor~SnapshotCallback} callback\n\t */","meta":{"range":[10136,10214],"filename":"RqlStorage.js","lineno":429,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002434","name":"RqlStorage#SetSnapshot","type":"MethodDefinition","paramnames":["instance","callback"]},"vars":{"":null}},"description":"<p>Set a callback that can take a snapshot of an Actor instance</p>","access":"public","params":[{"type":{"names":["Actor"]},"name":"instance"},{"type":{"names":["Actor~SnapshotCallback"]},"name":"callback"}],"name":"SetSnapshot","longname":"RqlStorage#SetSnapshot","kind":"function","memberof":"RqlStorage","scope":"instance","$longname":"RqlStorage#SetSnapshot"},{"comment":"/**\n\t * Attempts to soft lock an instance, returns true if it was successful\n\t * @param {Actor} instance\n\t */","meta":{"range":[2920,3853],"filename":"Storage.js","lineno":114,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003008","name":"Storage#SoftLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Attempts to soft lock an instance, returns true if it was successful</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"SoftLock","longname":"RqlStorage#SoftLock","kind":"function","memberof":"RqlStorage","scope":"instance","inherits":"Storage#SoftLock","inherited":true,"$longname":"RqlStorage#SoftLock"},{"comment":"/**\n\t * Stores an event stream to the backing device.\n\t * @access public\n\t * @param {Actor} instance The actor instance we are storing\n\t * @param {Array} events The events to store\n\t * @param {boolean} ignoreConcurrencyError Whether to ignore a concurrency error\n\t * @return {Promise.<Array|boolean>} Resolves to an array of stored events if successful, otherwise false unless `ignoreConcurrencyError` is true\n\t */","meta":{"range":[7995,9442],"filename":"RqlStorage.js","lineno":345,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002147","name":"RqlStorage#Store","type":"MethodDefinition","paramnames":["instance","events","ignoreConcurrencyError"]},"vars":{"":null}},"description":"<p>Stores an event stream to the backing device.</p>","access":"public","params":[{"type":{"names":["Actor"]},"description":"<p>The actor instance we are storing</p>","name":"instance"},{"type":{"names":["Array"]},"description":"<p>The events to store</p>","name":"events"},{"type":{"names":["boolean"]},"description":"<p>Whether to ignore a concurrency error</p>","name":"ignoreConcurrencyError","defaultvalue":false}],"returns":[{"type":{"names":["Promise.<(Array|boolean)>"]},"description":"<p>Resolves to an array of stored events if successful, otherwise false unless <code>ignoreConcurrencyError</code> is true</p>"}],"name":"Store","longname":"RqlStorage#Store","kind":"function","memberof":"RqlStorage","scope":"instance","$longname":"RqlStorage#Store"},{"comment":"/**\n\t * Subscribe to an event stream.\n\t * @access public\n\t * @param {string} id The id of the stream to subscribe to\n\t * @param {Actor~OnEvent} cb The function to call on new events\n\t * @param {int} sinceVersion The version to start streaming from\n\t * @return {Promise.<void>} Resolves once the subscription is setup\n\t */","meta":{"range":[10717,12008],"filename":"RqlStorage.js","lineno":450,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002462","name":"RqlStorage#SubscribeTo","type":"MethodDefinition","paramnames":["id","cb","sinceVersion"]},"vars":{"":null}},"description":"<p>Subscribe to an event stream.</p>","access":"public","params":[{"type":{"names":["string"]},"description":"<p>The id of the stream to subscribe to</p>","name":"id"},{"type":{"names":["Actor~OnEvent"]},"description":"<p>The function to call on new events</p>","name":"cb"},{"type":{"names":["int"]},"description":"<p>The version to start streaming from</p>","name":"sinceVersion"}],"returns":[{"type":{"names":["Promise.<void>"]},"description":"<p>Resolves once the subscription is setup</p>"}],"name":"SubscribeTo","longname":"RqlStorage#SubscribeTo","kind":"function","memberof":"RqlStorage","scope":"instance","$longname":"RqlStorage#SubscribeTo"},{"comment":"/**\n\t * Subscribe to future events of a given name. It returns a promise that\n\t * resolves once the subscription is ready.\n\t * @access public\n\t * @param {string} name The name of events to listen to\n\t * @param {Actor~OnEvent} cb A callback to call\n\t * @returns {Promise.<void>} Resolves once the subscription is setup\n\t */","meta":{"range":[12335,12815],"filename":"RqlStorage.js","lineno":520,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002700","name":"RqlStorage#SubscribeToName","type":"MethodDefinition","paramnames":["name","cb"]},"vars":{"":null}},"description":"<p>Subscribe to future events of a given name. It returns a promise that\nresolves once the subscription is ready.</p>","access":"public","params":[{"type":{"names":["string"]},"description":"<p>The name of events to listen to</p>","name":"name"},{"type":{"names":["Actor~OnEvent"]},"description":"<p>A callback to call</p>","name":"cb"}],"returns":[{"type":{"names":["Promise.<void>"]},"description":"<p>Resolves once the subscription is setup</p>"}],"name":"SubscribeToName","longname":"RqlStorage#SubscribeToName","kind":"function","memberof":"RqlStorage","scope":"instance","$longname":"RqlStorage#SubscribeToName"},{"comment":"/**\n\t * Completely unlocks an instance. If some other instance\n\t * locked it, you can call `Unlock` to force it.\n\t * @param {Actor} instance\n\t */","meta":{"range":[2702,2806],"filename":"Storage.js","lineno":104,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002984","name":"Storage#Unlock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Completely unlocks an instance. If some other instance\nlocked it, you can call <code>Unlock</code> to force it.</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"Unlock","longname":"RqlStorage#Unlock","kind":"function","memberof":"RqlStorage","scope":"instance","inherits":"Storage#Unlock","inherited":true,"$longname":"RqlStorage#Unlock"},{"comment":"/**\n\t * Un-set the projector callback for an instance\n\t * @access public\n\t * @param {Actor} instance The instance to unset\n\t */","meta":{"range":[9897,9966],"filename":"RqlStorage.js","lineno":419,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002421","name":"RqlStorage#UnsetProjector","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Un-set the projector callback for an instance</p>","access":"public","params":[{"type":{"names":["Actor"]},"description":"<p>The instance to unset</p>","name":"instance"}],"name":"UnsetProjector","longname":"RqlStorage#UnsetProjector","kind":"function","memberof":"RqlStorage","scope":"instance","$longname":"RqlStorage#UnsetProjector"},{"comment":"/**\n\t * Unset a snapshot callback for the given instance.\n\t * @access public\n\t * @param {Actor} instance\n\t */","meta":{"range":[10328,10391],"filename":"RqlStorage.js","lineno":438,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002449","name":"RqlStorage#UnsetSnapshot","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Unset a snapshot callback for the given instance.</p>","access":"public","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"UnsetSnapshot","longname":"RqlStorage#UnsetSnapshot","kind":"function","memberof":"RqlStorage","scope":"instance","$longname":"RqlStorage#UnsetSnapshot"},{"comment":"/**\n\t * Unsubscribe from a name/id. You must pass the original reference\n\t * to the callback you'd like to unsubscribe from.\n\t * @param {string} id The name/id to unsubscribe from\n\t * @param {Actor~OnEvent} cb The callback of the subscription\n\t */","meta":{"range":[13067,13444],"filename":"RqlStorage.js","lineno":546,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002787","name":"RqlStorage#Unsubscribe","type":"MethodDefinition","paramnames":["id","cb"]},"vars":{"":null}},"description":"<p>Unsubscribe from a name/id. You must pass the original reference\nto the callback you'd like to unsubscribe from.</p>","params":[{"type":{"names":["string"]},"description":"<p>The name/id to unsubscribe from</p>","name":"id"},{"type":{"names":["Actor~OnEvent"]},"description":"<p>The callback of the subscription</p>","name":"cb"}],"name":"Unsubscribe","longname":"RqlStorage#Unsubscribe","kind":"function","memberof":"RqlStorage","scope":"instance","$longname":"RqlStorage#Unsubscribe"},{"comment":"/**\n\t * Returns a promise that resolves when the lock is released. If there's a hard lock,\n\t * it will be resolved when the instance holding the lock releases the lock.\n\t * @param {Actor} instance The instance to wait on\n\t * @return {Promise.<void>}\n\t */","meta":{"range":[4359,4499],"filename":"Storage.js","lineno":182,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003209","name":"Storage#WaitLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Returns a promise that resolves when the lock is released. If there's a hard lock,\nit will be resolved when the instance holding the lock releases the lock.</p>","params":[{"type":{"names":["Actor"]},"description":"<p>The instance to wait on</p>","name":"instance"}],"returns":[{"type":{"names":["Promise.<void>"]}}],"name":"WaitLock","longname":"RqlStorage#WaitLock","kind":"function","memberof":"RqlStorage","scope":"instance","inherits":"Storage#WaitLock","inherited":true,"$longname":"RqlStorage#WaitLock"}],"$constructor":{"comment":"/**\n\t * Creates a storage adapter backed by rethinkdb\n\t * @param {string} host The host to connect to\n\t * @param {string} db The database to connect to\n\t * @param {int} port The port to connect to\n\t * @param {Object} options Extraneous options\n\t * @param {number} options.optimizeAt When to optimize the event stream through memoization / snapshot {@link #RqlStorage#optimizeAt} default is 10\n\t */","meta":{"range":[3821,4818],"filename":"RqlStorage.js","lineno":161,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100001654","name":"RqlStorage","type":"MethodDefinition","paramnames":["host","db","port","options"]},"vars":{"":null}},"description":"<p>Creates a storage adapter backed by rethinkdb</p>","params":[{"type":{"names":["string"]},"description":"<p>The host to connect to</p>","name":"host"},{"type":{"names":["string"]},"description":"<p>The database to connect to</p>","name":"db"},{"type":{"names":["int"]},"description":"<p>The port to connect to</p>","name":"port"},{"type":{"names":["Object"]},"description":"<p>Extraneous options</p>","name":"options"},{"type":{"names":["number"]},"description":"<p>When to optimize the event stream through memoization / snapshot {@link #RqlStorage#optimizeAt} default is 10</p>","name":"options.optimizeAt"}],"name":"RqlStorage","longname":"RqlStorage","kind":"class","scope":"global","undocumented":true,"$longname":"RqlStorage"}},{"comment":"/**\n * All storage adapters extend the `Storage` class. The base class manages\n * locks: Soft Locks and Hard Locks.\n *\n * Locks give your application an ability to handle transactions, by\n * preventing mutation of state, either per instance or per stream id.\n *\n * ## What's a Soft Lock?\n *\n * A Soft Lock prevents an instance from persisting events, but still\n * allows events to be applied to the current instance. An example:\n *\n * **warning!** These examples are flawed and will cause issues. Do not\n * use until it can be fixed in a future release\n *\n * ```js\n * async function() {\n * const actor = new Actor(id, storage);\n *  await actor.Load()\n *  // attempt to get a soft lock\n *  if (storage.SoftLock(actor)) {\n *    // we have the lock, so try to do something complex\n *    try {\n *      await actor.ComplexTask();\n *      storage.Unlock(actor);\n *    }\n *    catch (err) {\n *      // do something\n *    }\n *    finally() {\n *      // don't unlock\n *      actor.Destroy();\n *    }\n *  }\n * }\n * ```\n *\n * ## What's a Hard Lock?\n *\n * A hard lock is very different from a soft lock. A soft lock is per\n * instance. Meaning multiple instances of an actor id can hold a soft\n * lock. A hard lock is a distributed lock. No other instances will be\n * able to take a lock, or persist events, including the locked instance,\n * until the lock is released.\n *\n * ```js\n * async function() {\n *   const actor = new Actor(id, storage);\n *   await actor.Load();\n *   // make sure we can get a soft lock\n *   if (storage.SoftLock(actor)) {\n *     // make sure we can get a hard lock\n *     if (storage.HardLock(actor)) {\n *       try {\n *         await actor.ComplexTask();\n *         storage.Unlock(actor);\n *       }\n *       catch(err) {\n *         // do something\n *       }\n *       finally() {\n *         actor.Destroy();\n *       }\n *     }\n *   }\n * }\n * ```\n */","meta":{"range":[1868,4501],"filename":"Storage.js","lineno":69,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002921","name":"Storage","type":"ClassDeclaration","paramnames":[]}},"classdesc":"<p>All storage adapters extend the <code>Storage</code> class. The base class manages\nlocks: Soft Locks and Hard Locks.</p>\n<p>Locks give your application an ability to handle transactions, by\npreventing mutation of state, either per instance or per stream id.</p>\n<h2>What's a Soft Lock?</h2><p>A Soft Lock prevents an instance from persisting events, but still\nallows events to be applied to the current instance. An example:</p>\n<p><strong>warning!</strong> These examples are flawed and will cause issues. Do not\nuse until it can be fixed in a future release</p>\n<pre class=\"prettyprint source lang-js\"><code>async function() {\nconst actor = new Actor(id, storage);\n await actor.Load()\n // attempt to get a soft lock\n if (storage.SoftLock(actor)) {\n   // we have the lock, so try to do something complex\n   try {\n     await actor.ComplexTask();\n     storage.Unlock(actor);\n   }\n   catch (err) {\n     // do something\n   }\n   finally() {\n     // don't unlock\n     actor.Destroy();\n   }\n }\n}</code></pre><h2>What's a Hard Lock?</h2><p>A hard lock is very different from a soft lock. A soft lock is per\ninstance. Meaning multiple instances of an actor id can hold a soft\nlock. A hard lock is a distributed lock. No other instances will be\nable to take a lock, or persist events, including the locked instance,\nuntil the lock is released.</p>\n<pre class=\"prettyprint source lang-js\"><code>async function() {\n  const actor = new Actor(id, storage);\n  await actor.Load();\n  // make sure we can get a soft lock\n  if (storage.SoftLock(actor)) {\n    // make sure we can get a hard lock\n    if (storage.HardLock(actor)) {\n      try {\n        await actor.ComplexTask();\n        storage.Unlock(actor);\n      }\n      catch(err) {\n        // do something\n      }\n      finally() {\n        actor.Destroy();\n      }\n    }\n  }\n}</code></pre>","name":"Storage","longname":"Storage","kind":"class","scope":"global","description":"<p>Creates a storage object</p>","params":[],"$longname":"Storage","$members":[{"comment":"/**\n\t * Attempt to hard lock an instance, returns true if successful\n\t * @param {Actor} instance\n\t */","meta":{"range":[3959,4100],"filename":"Storage.js","lineno":168,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003180","name":"Storage#HardLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Attempt to hard lock an instance, returns true if successful</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"HardLock","longname":"Storage#HardLock","kind":"function","memberof":"Storage","scope":"instance","$longname":"Storage#HardLock"},{"comment":"/**\n\t * Returns `true` if an instance is hard locked\n\t * @param {Actor} instance\n\t * @returns {boolean} Whether or not it is hard locked\n\t */","meta":{"range":[2417,2552],"filename":"Storage.js","lineno":92,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002959","name":"Storage#IsHardLocked","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Returns <code>true</code> if an instance is hard locked</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not it is hard locked</p>"}],"name":"IsHardLocked","longname":"Storage#IsHardLocked","kind":"function","memberof":"Storage","scope":"instance","$longname":"Storage#IsHardLocked"},{"comment":"/**\n\t * Will return true whether the lock is a hard lock or a soft lock.\n\t * @param {Actor} instance The instance to check\n\t * @returns {boolean} Whether or not it is locked\n\t */","meta":{"range":[2172,2271],"filename":"Storage.js","lineno":83,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002935","name":"Storage#IsLocked","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Will return true whether the lock is a hard lock or a soft lock.</p>","params":[{"type":{"names":["Actor"]},"description":"<p>The instance to check</p>","name":"instance"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not it is locked</p>"}],"name":"IsLocked","longname":"Storage#IsLocked","kind":"function","memberof":"Storage","scope":"instance","$longname":"Storage#IsLocked"},{"comment":"/**\n\t * Attempts to soft lock an instance, returns true if it was successful\n\t * @param {Actor} instance\n\t */","meta":{"range":[2920,3853],"filename":"Storage.js","lineno":114,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003008","name":"Storage#SoftLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Attempts to soft lock an instance, returns true if it was successful</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"SoftLock","longname":"Storage#SoftLock","kind":"function","memberof":"Storage","scope":"instance","$longname":"Storage#SoftLock"},{"comment":"/**\n\t * Completely unlocks an instance. If some other instance\n\t * locked it, you can call `Unlock` to force it.\n\t * @param {Actor} instance\n\t */","meta":{"range":[2702,2806],"filename":"Storage.js","lineno":104,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002984","name":"Storage#Unlock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Completely unlocks an instance. If some other instance\nlocked it, you can call <code>Unlock</code> to force it.</p>","params":[{"type":{"names":["Actor"]},"name":"instance"}],"name":"Unlock","longname":"Storage#Unlock","kind":"function","memberof":"Storage","scope":"instance","$longname":"Storage#Unlock"},{"comment":"/**\n\t * Returns a promise that resolves when the lock is released. If there's a hard lock,\n\t * it will be resolved when the instance holding the lock releases the lock.\n\t * @param {Actor} instance The instance to wait on\n\t * @return {Promise.<void>}\n\t */","meta":{"range":[4359,4499],"filename":"Storage.js","lineno":182,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100003209","name":"Storage#WaitLock","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"<p>Returns a promise that resolves when the lock is released. If there's a hard lock,\nit will be resolved when the instance holding the lock releases the lock.</p>","params":[{"type":{"names":["Actor"]},"description":"<p>The instance to wait on</p>","name":"instance"}],"returns":[{"type":{"names":["Promise.<void>"]}}],"name":"WaitLock","longname":"Storage#WaitLock","kind":"function","memberof":"Storage","scope":"instance","$longname":"Storage#WaitLock"}],"$constructor":{"comment":"/**\n\t * Creates a storage object\n\t * @constructor\n\t */","meta":{"range":[1941,1989],"filename":"Storage.js","lineno":74,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100002924","name":"Storage","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"<p>Creates a storage object</p>","kind":"class","name":"Storage","longname":"Storage","scope":"global","params":[],"undocumented":true,"$longname":"Storage"}},{"comment":"/**\n * Handles The next step to Given\n * @see {@link #Given}\n */","meta":{"range":[790,1650],"filename":"Given.js","lineno":42,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000664","name":"When","type":"ClassDeclaration","paramnames":["model","previous","action","params"]}},"classdesc":"<p>Handles The next step to Given</p>","see":["{@link #Given}"],"name":"When","longname":"When","kind":"class","scope":"global","params":[],"$longname":"When","$members":[{"comment":"/**\n\t * Then it expects these events will fire\n\t * @see {@link #Given}\n\t * @access public\n\t * @param {Array} expected An array of expected events\n\t * @return {Promise.<And>}\n\t */","meta":{"range":[1140,1648],"filename":"Given.js","lineno":57,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000699","name":"When#Then","type":"MethodDefinition","paramnames":["expected"]},"vars":{"":null}},"description":"<p>Then it expects these events will fire</p>","see":["{@link #Given}"],"access":"public","params":[{"type":{"names":["Array"]},"description":"<p>An array of expected events</p>","name":"expected"}],"returns":[{"type":{"names":["Promise.<And>"]}}],"name":"Then","longname":"When#Then","kind":"function","memberof":"When","scope":"instance","$longname":"When#Then"}],"$constructor":{"comment":"","meta":{"range":[804,957],"filename":"Given.js","lineno":43,"path":"/home/robert/code/soaring-octopus/lib","code":{"id":"astnode100000667","name":"When","type":"MethodDefinition","paramnames":["model","previous","action","params"]},"vars":{"":null}},"undocumented":true,"name":"When","longname":"When","kind":"class","scope":"global","params":[],"$longname":"When"}}],"symbols":["Actor","Actor#Destroy","Actor#Fire","Actor#Id","Actor#id","Actor#instanceId","Actor#ListenFor","Actor#Load","Actor#nextVersion","Actor#Project","Actor#replaying","Actor#Snapshot","Actor#state","Actor#storage","Actor#Store","Actor#subs","Actor~OnEvent","Actor~ProjectorCallback","And","And#And","FireSuccessCallback","Given","MemStorage","MemStorage#Close","MemStorage#doMigrations","MemStorage#HardLock","MemStorage#Inject","MemStorage#IsHardLocked","MemStorage#IsLocked","MemStorage#LoadEvents","MemStorage#LoadSnapshot","MemStorage#SetProjector","MemStorage#SetSnapshot","MemStorage#SoftLock","MemStorage#Store","MemStorage#SubscribeTo","MemStorage#SubscribeToName","MemStorage#Unlock","MemStorage#UnsetProjector","MemStorage#UnsetSnapshot","MemStorage#Unsubscribe","MemStorage#WaitLock","RqlLockProvider","RqlLockProvider#delete","RqlLockProvider#get","RqlLockProvider#has","RqlLockProvider#init","RqlLockProvider#locks","RqlLockProvider#r","RqlLockProvider#set","RqlStorage","RqlStorage#Close","RqlStorage#doMigrations","RqlStorage#HardLock","RqlStorage#IsHardLocked","RqlStorage#IsLocked","RqlStorage#SetProjector","RqlStorage#SetSnapshot","RqlStorage#SoftLock","RqlStorage#Store","RqlStorage#SubscribeTo","RqlStorage#SubscribeToName","RqlStorage#Unlock","RqlStorage#UnsetProjector","RqlStorage#UnsetSnapshot","RqlStorage#Unsubscribe","RqlStorage#WaitLock","Storage","Storage#HardLock","Storage#IsHardLocked","Storage#IsLocked","Storage#SoftLock","Storage#Unlock","Storage#WaitLock","When","When#Then"]}},"app":{"title":"Omniscient Net","entrance":"content:readme","server":"github","routing":{"method":"path","caseSensitive":true},"base":"/omniscient-net/","meta":null},"template":{"name":"Docma Default Template","version":"1.5.0","author":"Onur Yıldırım (onur@cutepilot.com)","license":"MIT","main":"index.html","options":{"title":"Omniscient Net","sidebar":true,"navbar":true,"navItems":[{"label":"Documentation","href":"/omniscient-net/api","iconClass":"ico-md ico-book","items":[{"label":"Actors","href":"/omniscient-net/api#Actor"},{"label":"Storage","href":"/omniscient-net/api#Storage"},{"label":"RqlStorage","href":"/omniscient-net/api#RqlStorage"}]},{"label":"Testing","href":"/omniscient-net/testing","iconClass":"ico-md ico-flask"},{"label":"Github","href":"https://github.com/withinboredom/omniscient-net","iconClass":"ico-md ico-github"}],"collapsed":false,"badges":true,"search":true}},"_":{"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","logsEnabled":false}};
!function(){var e={};e.createChild=function(e,t,n){n=n||{};var o=document.createElement(t||"div");return Object.keys(n).forEach(function(e){o[e]=n[e]}),e.appendChild(o),o},e.getDocmaElem=function(){var t=document.getElementById(docma._.elementID);return t||(t=e.createChild(document.body,"div",{id:docma._.elementID})),t},e.getContentElem=function(){var e=document.getElementById(docma._.contentElementID);if(!e)throw new Error("Partial "+docma._.partials.content+' should have an element with id="'+docma._.contentElementID+'".');return e},e.loadCompiledContent=function(t){e.getDocmaElem().innerHTML=t},e.loadContent=function(t){e.getContentElem().innerHTML=t,e.scrollTo()},e.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var o=document.documentElement;return{top:n.top+window.pageYOffset-o.clientTop,left:n.left+window.pageXOffset-o.clientLeft}}}},e.scrollTo=function(t){if(!(t=(t||window.location.hash||"").replace(/^#/,"")))return void(document.body.scrollTop=0);var n=document.getElementById(t);n&&(document.body.scrollTop=e.getOffset(n).top)},e.fixAnchors=function(){docma.app.base&&setTimeout(function(){var e,t,n=document.querySelectorAll('a[href^="#"]');for(e=0;e<n.length;e++){t=n[e];var o=t.getAttribute("href");"#"===o.slice(0,1)&&o.length>1&&(o=window.location.pathname+(window.location.search||"")+o,t.setAttribute("href",o))}},50)},docma.dom=Object.freeze(e)}();
!function(){dust.filters=dust.filters||{},dust.filters.$pt=function(t){return docma.utils.parseTicks(t)},dust.filters.$pnl=function(t){return docma.utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return docma.utils.parseLinks(t)},dust.filters.$tl=function(t){return docma.utils.trimLeft(t)},dust.filters.$p=function(t){return docma.utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return docma.utils.normalizeTabs(t)},dust.filters.$desc=function(t){return docma.utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""},dust.filters.$val=function(t){var e=docma.utils.notate(t,"meta.code.value");return void 0===e?"":e},dust.filters.$id=function(t){var e;if("string"==typeof t)e=t;else{e=(docma.utils.isConstructor(t)?"new-":"")+t.$longname}return e.replace(/ /g,"-")}}();
!function(){function o(o,e,n){return e?(o&&"/"!==e.slice(0,1)&&(e="/"+e),n&&"/"!==e.slice(-1)&&(e+="/"),e):o||n?"/":""}function e(o,e){e=void 0===e?window.location.search||"":e,"?"===e.slice(0,1)&&(e=e.slice(1)),o=o.replace(/[\[\]]/g,"\\$&");var n=new RegExp("&?"+o+"(=([^&#]*)|&|#|$)"),a=n.exec(e);return a&&a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):""}Object.defineProperty(docma,"location",{configurable:!1,get:function(){var n=o(!0,window.location.pathname,!0),a=o(!0,docma.app.base,!0),c=n;return n.slice(0,a.length)===a&&(c=n.slice(a.length-1,n.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:o(!0,docma.app.entrance,!1),base:a,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:n,pathname:c,path:c+(window.location.search||""),getQuery:e}}}),docma.location=Object.freeze(docma.location)}();
!function(){function e(e){return e&&""!==e.trim()?e:null}function n(e){return(e||"").replace(/([^>]+>)?~?(.*)/,"$2")}function t(e){return e}var r={};r.notate=function(e,n){if("object"==typeof e){var t,i=Array.isArray(n)?n:n.split("."),o=i[0];if(o)return t=e[o],i.length>1?(i.shift(),r.notate(t,i)):t}},r.getName=function(e){if(e.alias){var t=n(r.notate(e,"meta.code.name")||"");if(t)return t.replace(/.*?[#\.~:](\w+)$/i,"$1")}return e.name},r.getLongName=function(e){var t=n(e.longname);if(e.alias){var i=n(r.notate(e,"meta.code.name")||"");if(!i)return t;var o=n(e.memberof||"");if(!o)return i;var a=new RegExp("^"+o+"[#\\.~:]"),s="instance"===e.scope?"#":".";return a.test(i)?i:o+s+i}return t},r.getFullName=r.getLongName,r.getCodeName=function(e){return n(r.notate(e,"meta.code.name")||"")||r.getLongName(e)},r.getSymbolByName=function(e,n){var t,i;for(t=0;t<e.length;t++){if(i=e[t],i.name===n||i.longname===n||r.getFullName(i)===n)return i;if(i.$members){var o=r.getSymbolByName(i.$members,n);if(o)return o}}return null},r.isGlobal=function(e){return"global"===e.scope},r.isNamespace=function(e){return"namespace"===e.kind},r.isModule=function(e){return"module"===e.kind},r.isClass=function(e){return!r.isConstructor(e)&&("class"===e.kind||"ClassDeclaration"===r.notate(e,"meta.code.type"))},r.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===r.notate(e,"meta.code.type")},r.isStaticMember=function(e){return"static"===e.scope},r.isStatic=r.isStaticMember,r.isInner=function(e){return"inner"===e.scope},r.isInstanceMember=function(e){return"instance"===e.scope},r.isMethod=function(e){var n=r.notate(e,"meta.code.type");return"function"===e.kind||"MethodDefinition"===n||"FunctionExpression"===n},r.isFunction=r.isMethod,r.isInstanceMethod=function(e){return r.isInstanceMember(e)&&r.isMethod(e)},r.isStaticMethod=function(e){return r.isStaticMember(e)&&r.isMethod(e)},r.isProperty=function(e){return"member"===e.kind},r.isInstanceProperty=function(e){return r.isInstanceMember(e)&&r.isProperty(e)},r.isStaticProperty=function(e){return r.isStaticMember(e)&&r.isProperty(e)},r.isTypeDef=function(e){return"typedef"===e.kind},r.isCustomType=r.isTypeDef,r.isEnum=function(e){return e.isEnum},r.isReadOnly=function(e){return e.readonly},r.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},r.isPrivate=function(e){return"private"===e.access},r.isProtected=function(e){return"protected"===e.access},r.isUndocumented=function(e){return!e.comments},r.hasDescription=function(n){return Boolean(e(n.classdesc)||e(n.description))},r.getTypes=function(e){if("class"===e.kind)return"class";var n=r.notate(e,"type.names")||[];return n=n.join("|"),e.isEnum?"enum<"+n+">":n},r.getReturnTypes=function(e){var n=e.returns;if(!Array.isArray(n))return"void";var t,i=n.reduce(function(e,n){return t=r.notate(n,"type.names"),Array.isArray(t)?e.concat(t):e},[]);return i.length>0?i.join("|"):"void"},r.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},r.parseTicks=function(e){return e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,n,t){return r.normalizeTabs(r._wrapEscapeCode(t,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,n,t){return r._wrapEscapeCode(t)})},r.parseNewLines=function(e,n){return n=n||{},r._tokenize(e,function(e,t){if(t)return e;var r=e.split(/\n{2,}/);return r.length<=1&&n.keepIfSingle?e:r.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},r.parseLinks=function(e,n){n=n||{};var t=e.replace(/\{@link +([^\}]*?)\}/g,function(e,t){var r,i,o=t.split("|");return 1===o.length?r=i=o[0].trim():(r=o[0].trim(),i=o[1].trim()),'<a href="'+r+'"'+(n.target?' target="'+n.target+'"':"")+">"+i+"</a>"});return r.parseTicks(t)},r.parse=function(e,n){return n=n||{},e=r.trimLeft(e),e=r.parseNewLines(e,n),e=r.parseTicks(e),r.parseLinks(e,n)},r.normalizeTabs=function(e){var n=e.match(/^\s*/gm),t=1/0;if(n.forEach(function(e,n){e=e.replace(/\t/g,"  "),n>0&&(t=Math.min(e.length,t))}),t!==1/0){var r=new RegExp("^\\s{"+t+"}","gm");e=e.replace(r,"")}e=e.replace(/^\s*/,"");var i;return e.replace(/(\n+)(\s+)/gm,function(e,n,t){return i=t.replace(/\t/g,"  "),i=new Array(i.length-i.length%2+1).join(" "),n+i})},r.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var n=r.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return r.isConstructor(e)&&(n+=" constructor"),r.isMethod(e)&&(n+=" method"),r.isProperty(e)&&(n+=" property"),n.replace(/[><"'`\n\r]/g,"").toLowerCase()},r.listType=function(e){return e.map(function(e){return r._wrapEscapeCode(e)}).join(", ")},r.listTypeDesc=function(e){if(!e||0===e.length)return"";var n,t=e.map(function(e){return n=r.parse(e.description||"",{keepIfSingle:!0}),n&&(n="&nbsp;&nbsp;—&nbsp;&nbsp;"+n),r._wrapEscapeCode(e.type.names.join("|"))+n});return t.length>1?"<ul>\n"+t.join("</li>\n<li>")+"\n</ul>":t},r._find=function(e,n){if(!e||!n)return null;var t,r,i=null;for(t=0;t<e.length;t++)if((r=e[t])&&"object"==typeof r){for(var o in n)if(void 0!==n[o]&&n.hasOwnProperty(o)){if(n[o]!==r[o]){i=null;break}i=r}if(i)break}return i},r._assign=function(e,n,t){e=e||{};var r;for(r in n)n.hasOwnProperty(r)&&(t?Object.defineProperty(e,r,{enumerable:!0,value:n[r]}):e[r]=n[r]);return e},r._values=function(e){if(Array.isArray(e))return e;var n,t=[];for(n in e)e.hasOwnProperty(n)&&t.push(e[n]);return t},r._wrapEscapeCode=function(e,n){return e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;"),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e},r._tokenize=function(e,n){"function"!=typeof n&&(n=t);if(e.indexOf("```")<0)return[n(e,!1)];var r,i="```".length,o="",a="",s=[],u=!1;for(r=0;r<e.length;r++)o+=e[r],a+=e[r],o.length>i&&(o=o.slice(-i)),"```"===o&&(u=!u,u?(s.push(n(a.slice(0,-i),!1)),a=o):(s.push(n(a,!0)),a=""));return s},docma.utils=r}();
!function(){function t(t,e){m.info("Event:",t,e?e[0]:""),l.trigger(t,e)}function e(t,n){if(n&&!(u.indexOf(n)<0)){if(t)docma.app.routing.caseSensitive||(t=t.toLowerCase());else{if(n!==e.Type.API)return;t="_def_"}var o=f._find(docma.routes,{type:n,name:t});o&&f._assign(this,o)}}function n(t,e){dust.render(t,docma,function(t,n){if(t)throw t;p.loadCompiledContent(n),"function"==typeof e&&e()})}function o(){t(docma.Event.Render,[docma.currentRoute]),d&&(t(docma.Event.Ready),d=!1)}function r(o,r){docma._.currentRoute=e.create(null),n(docma._.partials.notFound,function(){if(t(docma.Event.Render,[null]),p.scrollTo(),"function"==typeof r)return r(404);throw new Error("Page or content not found for route: "+JSON.stringify(o))})}function a(){if(s){var t=sessionStorage.getItem("redirectPath")||null;if(t)return sessionStorage.removeItem("redirectPath"),m.info("Redirecting to:",t),page.redirect(t),!0}return!1}function i(t){var e=t||window.location.search;return/^[?&]/.test(e)&&(e=e.slice(1)),e||null}var c,u,d=!1,s="path"===docma.app.routing.method,f=docma.utils,p=docma.dom,m={};["log","info","warn","error"].forEach(function(t){!function(){m[t]=function(){docma._.logsEnabled&&console[t].apply(console,arguments)}}()}),docma.addFilter=function(t,e){if(docma.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,docma},docma.removeFilter=function(t){return delete dust.filters[t],docma},docma.filterExists=function(t){return"function"==typeof dust.filters[t]};var l=new EventEmitter;docma.Event={Ready:"ready",Render:"render",Route:"route"},docma.on=function(t,e){return l.on.apply(l,arguments),docma},docma.once=function(){return l.once.apply(l,arguments),docma},docma.off=function(){return l.off.apply(l,arguments),docma},docma.addListener=docma.on,docma.addListenerOnce=docma.once,docma.removeListener=docma.off,Object.defineProperty(docma,"currentRoute",{configurable:!1,get:function(){return docma._.currentRoute}}),Object.defineProperty(docma,"documentation",{configurable:!1,get:function(){return docma._.documentation}}),Object.defineProperty(docma,"symbols",{configurable:!1,get:function(){return docma._.symbols}}),e.Type={API:"api",CONTENT:"content"},u=f._values(e.Type),e.prototype.exists=function(){return Boolean(this.id)},e.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},e.prototype.isCurrent=function(){return this.isEqualTo(docma.currentRoute)},e.prototype.apply=function(){return this.type===e.Type.API?(docma._.documentation=docma.apis[this.name].documentation,docma._.symbols=docma.apis[this.name].symbols):(docma._.documentation=null,docma._.symbols=null),t(docma.Event.Route,[this]),docma.render(this),this},e.prototype.toString=function(){return JSON.stringify(this)},e.create=function(t,n){return new e(t,n)},e.fromID=function(t){if("string"!=typeof t)return m.warn("Route ID is not a string: "+t),new e(null);var n=t.split(":");return new e(n[1],n[0])},e.fromQuery=function(t){if(!t)return new e(null);var n=t.split("&")[0].split("="),o=n[0].toLowerCase();return new e(n[1],o)},Object.defineProperty(docma,"Route",{configurable:!1,get:function(){return e}}),docma.fetch=function(t,e){var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4===n.readyState){var o=200===n.status?n.responseText:"";return m.log("XHR GET:",n.status,t),e(n.status,o)}},n.open("GET",t,!0),n.send()},docma.render=function(t,a){if(!t||!t.exists())return r(t,a);if(!t.isEqualTo(docma.currentRoute)){docma._.currentRoute=t;var i="function"==typeof a;t.type===e.Type.API?n(docma._.partials.api,function(){o(),i&&a(200),p.fixAnchors(),p.scrollTo()}):docma.fetch(t.contentPath,function(e,c){if(404===e)return r(t,a);n(docma._.partials.content,function(){p.loadContent(c),o(),i&&a(e),p.fixAnchors()})})}},docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),s&&(page("(/)?api/:apiName?",function(t,n){var o=t.params.apiName||"_def_",r=e.create(o,e.Type.API);if(!r||!r.exists())return n();r.apply()}),page("(/)?:content",function(t,n){var o=t.params.content,r=e.create(o,e.Type.CONTENT);if(!r||!r.exists())return n();r.apply()})),page("(/)?",function(t,n){a()||setTimeout(function(){var o,r=i(t.querystring);if(s){if(r)return n();o=c}else m.log("Query-string:",r),o=r?e.fromQuery(r):c;if(!o||!o.exists())return n();o.isCurrent()||o.apply()},100)}),page("*",function(t){m.warn("Unknown Route:",t.path),e.create(null).apply()}),m.info("Docma SPA Configuration:"),m.info("App Title:          ",docma.app.title),m.info("Routing Method:     ",docma.app.routing.method),m.info("App Server:         ",docma.app.server),m.info("Base Path:          ",docma.app.base),m.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){d=!0,c=e.fromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),m.info("Docma SPA loaded!")}}();
docma = Object.freeze(docma);